import { SprinklesFn } from "rainbow-sprinkles";
import { RecipeVariants, RuntimeFn } from "@vanilla-extract/recipes";
import { StoreApi } from "zustand/vanilla";
import { PersistOptions } from "zustand/middleware";
import { WritableDraft } from "immer";
import React, { ReactNode, Dispatch, SetStateAction } from "react";
import { ChildSprinkles } from "rainbow-sprinkles/dist/declarations/src/types";
import { JSX } from "react/jsx-runtime";
import { AriaNumberFieldProps, AriaCheckboxProps, AriaRadioProps, AriaRadioGroupProps, AriaSliderProps, useNumberFormatter } from "react-aria";
import { Placement } from "@floating-ui/core";
import { ComboBoxProps } from "@react-types/combobox";
import { useInteractions, useFloating, Placement as _Placement1, OffsetOptions, FloatingArrowProps, UseTransitionStylesProps } from "@floating-ui/react";
export enum Intent {
    None = "none",
    Info = "info",
    Success = "warning",
    Warning = "success",
    Error = "error"
}
type IntentValues = "none" | "info" | "warning" | "success" | "error";
export type ThemeVariant = "light" | "dark";
export type ModePreference = ThemeVariant | "system";
export interface NumberFormatProps {
    value: number | string;
    style?: keyof Intl.NumberFormatOptionsStyleRegistry;
}
export type NumberFormatter = (props: NumberFormatProps) => string;
type StringifyLeaf<T> = T extends string ? String : T;
type DeepStringConstructor<T> = {
    [P in keyof T]: T[P] extends object ? DeepStringConstructor<T[P]> : StringifyLeaf<T[P]>;
};
type Primitive = string | number | boolean | bigint | symbol | null | undefined;
type LiteralUnion<LiteralType extends Primitive, BaseType extends Primitive> = LiteralType | (BaseType & {
    _?: never;
});
type PartialDeep<T> = T extends object ? {
    [P in keyof T]?: PartialDeep<T[P]>;
} : T;
declare const DEFAULT_ACCENTS: readonly ["red", "orange", "yellow", "green", "purple", "blue"];
type Accent = LiteralUnion<(typeof DEFAULT_ACCENTS)[number], string>;
declare const boxShadow: {
    xs: string;
    sm: string;
    base: string;
    md: string;
    lg: string;
    xl: string;
    "2xl": string;
    inset: string;
    primaryOutline: string;
    none: string;
    "dark-lg": string;
};
declare const themeContractTemplate: {
    readonly colors: {
        readonly black: string;
        readonly blackPrimary: string;
        readonly blackSecondary: string;
        readonly white: string;
        readonly transparent: string;
        readonly current: string;
        readonly whiteAlpha50: string;
        readonly whiteAlpha100: string;
        readonly whiteAlpha200: string;
        readonly whiteAlpha300: string;
        readonly whiteAlpha400: string;
        readonly whiteAlpha500: string;
        readonly whiteAlpha600: string;
        readonly whiteAlpha700: string;
        readonly whiteAlpha800: string;
        readonly whiteAlpha900: string;
        readonly blackAlpha50: string;
        readonly blackAlpha100: string;
        readonly blackAlpha200: string;
        readonly blackAlpha300: string;
        readonly blackAlpha400: string;
        readonly blackAlpha500: string;
        readonly blackAlpha600: string;
        readonly blackAlpha700: string;
        readonly blackAlpha800: string;
        readonly blackAlpha900: string;
        readonly gray50: string;
        readonly gray100: string;
        readonly gray200: string;
        readonly gray300: string;
        readonly gray400: string;
        readonly gray500: string;
        readonly gray600: string;
        readonly gray700: string;
        readonly gray800: string;
        readonly gray900: string;
        readonly red50: string;
        readonly red100: string;
        readonly red200: string;
        readonly red300: string;
        readonly red400: string;
        readonly red500: string;
        readonly red600: string;
        readonly red700: string;
        readonly red800: string;
        readonly red900: string;
        readonly orange50: string;
        readonly orange100: string;
        readonly orange200: string;
        readonly orange300: string;
        readonly orange400: string;
        readonly orange500: string;
        readonly orange600: string;
        readonly orange700: string;
        readonly orange800: string;
        readonly orange900: string;
        readonly yellow50: string;
        readonly yellow100: string;
        readonly yellow200: string;
        readonly yellow300: string;
        readonly yellow400: string;
        readonly yellow500: string;
        readonly yellow600: string;
        readonly yellow700: string;
        readonly yellow800: string;
        readonly yellow900: string;
        readonly green50: string;
        readonly green100: string;
        readonly green200: string;
        readonly green300: string;
        readonly green400: string;
        readonly green500: string;
        readonly green600: string;
        readonly green700: string;
        readonly green800: string;
        readonly green900: string;
        readonly blue50: string;
        readonly blue100: string;
        readonly blue200: string;
        readonly blue300: string;
        readonly blue400: string;
        readonly blue500: string;
        readonly blue600: string;
        readonly blue700: string;
        readonly blue800: string;
        readonly blue900: string;
        readonly primary50: string;
        readonly primary100: string;
        readonly primary200: string;
        readonly primary300: string;
        readonly primary400: string;
        readonly primary500: string;
        readonly primary600: string;
        readonly primary700: string;
        readonly primary800: string;
        readonly primary900: string;
        readonly purple50: string;
        readonly purple100: string;
        readonly purple200: string;
        readonly purple300: string;
        readonly purple400: string;
        readonly purple500: string;
        readonly purple600: string;
        readonly purple700: string;
        readonly purple800: string;
        readonly purple900: string;
        readonly accent: "";
        readonly accentText: "";
        readonly primary: "";
        readonly body: "";
        readonly background: "";
        readonly link: "";
        readonly linkHover: "";
        readonly text: "";
        readonly textInverse: "";
        readonly textSecondary: "";
        readonly textMuted: "";
        readonly textDanger: "";
        readonly textWarning: "";
        readonly textPlaceholder: "";
        readonly textSuccess: "";
        readonly rewardBg: "";
        readonly rewardContent: "";
        readonly cardBg: "";
        readonly inputBorder: "";
        readonly inputBorderFocus: "";
        readonly inputBg: "";
        readonly inputDangerBorder: "";
        readonly inputDangerBg: "";
        readonly inputDisabledBg: "";
        readonly inputDisabledText: "";
        readonly progressBg: "";
        readonly progressValue: "";
        readonly progressCursor: "";
        readonly trackBg: "";
        readonly divider: "";
        readonly menuItemBg: "";
        readonly menuItemBgSelected: "";
        readonly menuItemBgHovered: "";
        readonly menuItemBgActive: "";
        readonly tagButtonText: "";
        readonly tagButtonBg: "";
        readonly tagButtonBgHovered: "";
        readonly meshButtonSolidPrimaryBg: "";
        readonly meshButtonSolidPrimaryBgHovered: "";
        readonly meshButtonSolidPrimaryText: "";
        readonly meshButtonSolidSecondaryBg: "";
        readonly meshButtonSolidSecondaryBgHovered: "";
        readonly meshButtonSolidSecondaryText: "";
        readonly meshButtonGhostText: "";
        readonly meshButtonGhostTextHovered: "";
        readonly meshStakingSliderInfoPrimaryText: "";
        readonly meshStakingSliderInfoSecondaryText: "";
        readonly meshStakingSliderInfoSecondaryTextActive: "";
        readonly meshTabText: "";
        readonly meshTableCellText: "";
        readonly meshTableHeaderActionText: "";
        readonly meshTableHeaderActionSecondaryText: "";
        readonly meshTableCellBorder: "";
        readonly skeletonBg: "";
        readonly overflowShadowBg: "";
    };
    readonly font: {
        readonly body: "";
    };
    readonly space: {
        readonly "0": "";
        readonly "1": "";
        readonly "2": "";
        readonly "3": "";
        readonly "4": "";
        readonly "5": "";
        readonly "6": "";
        readonly "7": "";
        readonly "8": "";
        readonly "9": "";
        readonly "10": "";
        readonly "11": "";
        readonly "12": "";
        readonly "13": "";
        readonly "14": "";
        readonly "15": "";
        readonly "16": "";
        readonly "17": "";
        readonly "18": "";
        readonly "19": "";
        readonly "20": "";
        readonly "21": "";
        readonly "22": "";
        readonly "23": "";
        readonly "24": "";
        readonly "25": "";
        readonly "26": "";
        readonly "27": "";
        readonly "28": "";
        readonly "29": "";
        readonly "30": "";
        readonly auto: "";
        readonly full: "";
        readonly fit: "";
        readonly max: "";
        readonly min: "";
        readonly viewHeight: "";
        readonly viewWidth: "";
        readonly containerSm: "";
        readonly containerMd: "";
        readonly containerLg: "";
        readonly containerXl: "";
        readonly prose: "";
        readonly none: "";
    };
    readonly borderWidth: {
        readonly none: "";
        readonly sm: "";
        readonly base: "";
        readonly md: "";
        readonly lg: "";
        readonly xl: "";
    };
    readonly borderStyle: {
        readonly none: "";
        readonly solid: "";
        readonly dotted: "";
        readonly dashed: "";
        readonly groove: "";
        readonly ridge: "";
        readonly hidden: "";
        readonly double: "";
        readonly inset: "";
        readonly outset: "";
        readonly unset: "";
    };
    readonly boxShadow: {
        readonly xs: "";
        readonly sm: "";
        readonly base: "";
        readonly md: "";
        readonly lg: "";
        readonly xl: "";
        readonly "2xl": "";
        readonly inset: "";
        readonly primaryOutline: "";
        readonly none: "";
        readonly "dark-lg": "";
    };
    readonly radii: {
        readonly none: "";
        readonly sm: "";
        readonly base: "";
        readonly md: "";
        readonly lg: "";
        readonly xl: "";
        readonly "2xl": "";
        readonly "3xl": "";
        readonly "4xl": "";
        readonly full: "";
    };
    readonly letterSpacing: {
        readonly tighter: "";
        readonly tight: "";
        readonly normal: "";
        readonly wide: "";
        readonly wider: "";
        readonly widest: "";
    };
    readonly lineHeight: {
        readonly normal: "";
        readonly none: "";
        readonly shorter: "";
        readonly short: "";
        readonly base: "";
        readonly tall: "";
        readonly taller: "";
    };
    readonly fontWeight: {
        readonly hairline: "";
        readonly thin: "";
        readonly light: "";
        readonly normal: "";
        readonly medium: "";
        readonly semibold: "";
        readonly bold: "";
        readonly extrabold: "";
        readonly black: "";
    };
    readonly fontSize: {
        readonly "3xs": "";
        readonly "2xs": "";
        readonly xs: "";
        readonly sm: "";
        readonly md: "";
        readonly lg: "";
        readonly xl: "";
        readonly "2xl": "";
        readonly "3xl": "";
        readonly "4xl": "";
        readonly "5xl": "";
        readonly "6xl": "";
        readonly "7xl": "";
        readonly "8xl": "";
        readonly "9xl": "";
        readonly "10xl": "";
        readonly "11xl": "";
        readonly "12xl": "";
        readonly "13xl": "";
        readonly "14xl": "";
        readonly "15xl": "";
    };
    readonly zIndex: {
        readonly "-1": "";
        readonly "0": "";
        readonly "10": "";
        readonly "20": "";
        readonly "30": "";
        readonly "40": "";
        readonly "50": "";
        readonly "100": "";
        readonly auto: "";
    };
};
type OverridableState = "hover" | "active" | "disabled" | "focused";
type Bg = "bg" | `${OverridableState}Bg`;
type TextColor = "color" | `${OverridableState}Color`;
type Shadow = "shadow" | `${OverridableState}Shadow`;
type BorderColor = "borderColor" | `${OverridableState}BorderColor`;
type OverridableProp = Bg | TextColor | Shadow | BorderColor;
type OverridableComponents = "button" | "clipboard-copy-text" | "connect-modal" | "connect-modal-install-button" | "connect-modal-head-title" | "connect-modal-wallet-button" | "connect-modal-wallet-button-label" | "connect-modal-wallet-button-sublogo" | "connect-modal-qr-code" | "connect-modal-qr-code-shadow" | "connect-modal-qr-code-error" | "connect-modal-qr-code-error-button" | "connect-modal-qr-code-loading";
type OverrideValue = Partial<Record<OverridableProp, {
    light: string;
    dark: string;
}>>;
type ComponentOverrideMap = Partial<Record<OverridableComponents, OverrideValue>>;
type CustomThemeVars = PartialDeep<DeepStringConstructor<typeof themeContractTemplate>>;
type SingleThemeDef = {
    name: string;
    vars: CustomThemeVars;
};
type ThemeDef = SingleThemeDef;
declare const rainbowSprinkles: SprinklesFn<[{
    config: {
        display: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                flex: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                grid: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                block: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                inline: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                table: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "table-cell": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "table-row": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "inline-block": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "inline-flex": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "inline-grid": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: ("none" | "flex" | "grid" | "block" | "inline" | "table" | "table-cell" | "table-row" | "inline-block" | "inline-flex" | "inline-grid")[];
            name: "display";
        };
        position: {
            values: {
                fixed: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                absolute: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                relative: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                sticky: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: ("fixed" | "absolute" | "relative" | "sticky")[];
            name: "position";
        };
        padding: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "padding";
        };
        paddingLeft: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "paddingLeft";
        };
        paddingRight: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "paddingRight";
        };
        paddingTop: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "paddingTop";
        };
        paddingBottom: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "paddingBottom";
        };
        width: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "width";
        };
        height: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "height";
        };
        minWidth: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "minWidth";
        };
        minHeight: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "minHeight";
        };
        maxWidth: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "maxWidth";
        };
        maxHeight: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                0: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                1: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                2: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                auto: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                10: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                20: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                30: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                3: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                4: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                5: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                6: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                7: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                8: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                9: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                11: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                12: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                13: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                14: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                15: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                16: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                17: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                18: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                19: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                21: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                22: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                23: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                24: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                25: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                26: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                27: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                28: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                29: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                full: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                fit: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                max: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                min: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewHeight: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                viewWidth: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerSm: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerMd: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerLg: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                containerXl: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                prose: {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/5": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "1/2": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "2/3": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
                "3/4": {
                    default: string;
                    conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
                };
            };
            staticScale: {
                "1/5": string;
                "1/4": string;
                "1/3": string;
                "1/2": string;
                "2/3": string;
                "3/4": string;
                "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "maxHeight";
        };
    };
} & {
    config: {
        display: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "display";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        tableLayout: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "tableLayout";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        backgroundImage: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "backgroundImage";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        backgroundSize: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "backgroundSize";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        backgroundPosition: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "backgroundPosition";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        backgroundRepeat: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "backgroundRepeat";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        objectFit: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "objectFit";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        flex: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "flex";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        flexBasis: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "flexBasis";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        flexShrink: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "flexShrink";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        flexGrow: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "flexGrow";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        flexDirection: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "flexDirection";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        flexWrap: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "flexWrap";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        alignItems: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "alignItems";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        alignSelf: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "alignSelf";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        justifyContent: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "justifyContent";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        padding: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "padding";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        paddingLeft: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "paddingLeft";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        paddingRight: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "paddingRight";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        paddingTop: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "paddingTop";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        paddingBottom: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "paddingBottom";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        width: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "width";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        height: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "height";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        minWidth: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "minWidth";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        minHeight: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "minHeight";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        maxWidth: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "maxWidth";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        maxHeight: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "maxHeight";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        borderRadius: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly sm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly md: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly lg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly xl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "borderRadius";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        borderTopLeftRadius: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "borderTopLeftRadius";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        borderBottomLeftRadius: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "borderBottomLeftRadius";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        borderTopRightRadius: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "borderTopRightRadius";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        borderBottomRightRadius: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "borderBottomRightRadius";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        fontFamily: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "fontFamily";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        fontSize: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "3xs": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2xs": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly xs: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly sm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly md: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly lg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly xl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "fontSize";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        lineHeight: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly normal: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly shorter: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly short: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tall: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly taller: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "lineHeight";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        textAlign: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "textAlign";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        zIndex: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "-1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "40": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "50": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "zIndex";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        position: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "position";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        top: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "top";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        left: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "left";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        right: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "right";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        bottom: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "bottom";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        verticalAlign: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "verticalAlign";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        margin: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "margin";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        marginBottom: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "marginBottom";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        marginLeft: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "marginLeft";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        marginRight: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "marginRight";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        marginTop: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "marginTop";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        letterSpacing: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly tighter: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly normal: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly wide: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly wider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly widest: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "letterSpacing";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        textTransform: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "textTransform";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        fontWeight: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly hairline: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly thin: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly light: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly normal: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly medium: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly semibold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly bold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly extrabold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "fontWeight";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        whiteSpace: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "whiteSpace";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        wordBreak: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "wordBreak";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        overflowWrap: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "overflowWrap";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        fill: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "fill";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        overflow: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "overflow";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        overflowX: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "overflowX";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        overflowY: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "overflowY";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        textOverflow: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "textOverflow";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        aspectRatio: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "aspectRatio";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        opacity: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "opacity";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        cursor: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "cursor";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridTemplateColumns: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridTemplateColumns";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        grid: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "grid";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridArea: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridArea";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridAutoColumns: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridAutoColumns";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridAutoFlow: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridAutoFlow";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridAutoRows: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridAutoRows";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridColumn: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridColumn";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridColumnEnd: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridColumnEnd";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridColumnStart: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridColumnStart";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridTemplate: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridTemplate";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridTemplateAreas: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridTemplateAreas";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridTemplateRows: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridTemplateRows";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridRow: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridRow";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridRowEnd: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridRowEnd";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gridRowStart: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "gridRowStart";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        gap: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "gap";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        columnGap: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "columnGap";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        rowGap: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: {
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "rowGap";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        inset: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "inset";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        insetInlineStart: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "insetInlineStart";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        insetInlineEnd: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "insetInlineEnd";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        transform: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "transform";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        appearance: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "appearance";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        userSelect: {
            dynamic: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            dynamicScale: true;
            name: "userSelect";
            vars: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
    };
} & {
    config: {
        p: {
            mappings: "padding"[];
        };
        pl: {
            mappings: "paddingLeft"[];
        };
        pr: {
            mappings: "paddingRight"[];
        };
        pt: {
            mappings: "paddingTop"[];
        };
        pb: {
            mappings: "paddingBottom"[];
        };
        paddingX: {
            mappings: ("paddingLeft" | "paddingRight")[];
        };
        paddingY: {
            mappings: ("paddingBottom" | "paddingTop")[];
        };
        px: {
            mappings: ("paddingLeft" | "paddingRight")[];
        };
        py: {
            mappings: ("paddingBottom" | "paddingTop")[];
        };
        m: {
            mappings: "margin"[];
        };
        mr: {
            mappings: "marginRight"[];
        };
        ml: {
            mappings: "marginLeft"[];
        };
        mt: {
            mappings: "marginTop"[];
        };
        mb: {
            mappings: "marginBottom"[];
        };
        marginX: {
            mappings: ("marginLeft" | "marginRight")[];
        };
        marginY: {
            mappings: ("marginBottom" | "marginTop")[];
        };
        mx: {
            mappings: ("marginLeft" | "marginRight")[];
        };
        my: {
            mappings: ("marginBottom" | "marginTop")[];
        };
    };
}, {
    config: {
        color: {
            values: {
                transparent: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                background: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                link: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                black: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackPrimary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackSecondary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                white: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                current: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                accent: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                accentText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                body: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                linkHover: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                text: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textInverse: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textSecondary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textMuted: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textDanger: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textWarning: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textPlaceholder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textSuccess: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                rewardBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                rewardContent: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                cardBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputBorder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputBorderFocus: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDangerBorder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDangerBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDisabledBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDisabledText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                progressBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                progressValue: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                progressCursor: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                trackBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                divider: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBgSelected: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBgActive: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                tagButtonText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                tagButtonBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                tagButtonBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidPrimaryBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidPrimaryBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidPrimaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidSecondaryBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidSecondaryBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidSecondaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonGhostText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonGhostTextHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshStakingSliderInfoPrimaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshStakingSliderInfoSecondaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshStakingSliderInfoSecondaryTextActive: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTabText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableCellText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableHeaderActionText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableHeaderActionSecondaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableCellBorder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                skeletonBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                overflowShadowBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
            };
            staticScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "color";
        };
        backgroundColor: {
            values: {
                transparent: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                background: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                link: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                black: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackPrimary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackSecondary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                white: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                current: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                accent: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                accentText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                body: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                linkHover: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                text: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textInverse: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textSecondary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textMuted: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textDanger: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textWarning: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textPlaceholder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textSuccess: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                rewardBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                rewardContent: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                cardBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputBorder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputBorderFocus: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDangerBorder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDangerBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDisabledBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDisabledText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                progressBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                progressValue: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                progressCursor: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                trackBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                divider: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBgSelected: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBgActive: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                tagButtonText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                tagButtonBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                tagButtonBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidPrimaryBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidPrimaryBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidPrimaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidSecondaryBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidSecondaryBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidSecondaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonGhostText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonGhostTextHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshStakingSliderInfoPrimaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshStakingSliderInfoSecondaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshStakingSliderInfoSecondaryTextActive: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTabText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableCellText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableHeaderActionText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableHeaderActionSecondaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableCellBorder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                skeletonBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                overflowShadowBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
            };
            staticScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "backgroundColor";
        };
        borderColor: {
            values: {
                transparent: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                background: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                link: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                black: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackPrimary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackSecondary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                white: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                current: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                whiteAlpha900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blackAlpha900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                gray900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                red900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                orange900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                yellow900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                green900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                blue900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple50: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple100: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple200: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple300: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple400: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple500: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple600: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple700: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple800: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                purple900: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                accent: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                accentText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                body: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                linkHover: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                text: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textInverse: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textSecondary: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textMuted: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textDanger: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textWarning: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textPlaceholder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                textSuccess: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                rewardBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                rewardContent: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                cardBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputBorder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputBorderFocus: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDangerBorder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDangerBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDisabledBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inputDisabledText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                progressBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                progressValue: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                progressCursor: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                trackBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                divider: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBgSelected: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                menuItemBgActive: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                tagButtonText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                tagButtonBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                tagButtonBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidPrimaryBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidPrimaryBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidPrimaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidSecondaryBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidSecondaryBgHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonSolidSecondaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonGhostText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshButtonGhostTextHovered: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshStakingSliderInfoPrimaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshStakingSliderInfoSecondaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshStakingSliderInfoSecondaryTextActive: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTabText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableCellText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableHeaderActionText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableHeaderActionSecondaryText: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                meshTableCellBorder: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                skeletonBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                overflowShadowBg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
            };
            staticScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "borderColor";
        };
        boxShadow: {
            values: {
                none: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                inset: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                sm: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                base: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                md: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                lg: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                xl: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                xs: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                "2xl": {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                primaryOutline: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                "dark-lg": {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
            };
            staticScale: {
                readonly xs: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly sm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly md: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly lg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly xl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inset: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primaryOutline: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "dark-lg": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "boxShadow";
        };
        visibility: {
            values: {
                hidden: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                visible: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
                collapse: {
                    default: string;
                    conditions: Record<"base" | "hover" | "active" | "focus", string>;
                };
            };
            staticScale: ("hidden" | "visible" | "collapse")[];
            name: "visibility";
        };
    };
} & {
    config: {
        color: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "color";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        outline: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "outline";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        visibility: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "visibility";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        filter: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "filter";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        fill: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "fill";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        stroke: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "stroke";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        backgroundColor: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "backgroundColor";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderWidth: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly sm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly md: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly lg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly xl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "borderWidth";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderStyle: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly solid: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly dotted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly dashed: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly groove: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly ridge: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly hidden: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly double: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inset: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly outset: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly unset: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "borderStyle";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderColor: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "borderColor";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderBottomColor: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "borderBottomColor";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderBottomStyle: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "borderBottomStyle";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderBottomWidth: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "borderBottomWidth";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderTopColor: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "borderTopColor";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderTopStyle: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "borderTopStyle";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderTopWidth: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "borderTopWidth";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderLeftColor: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "borderLeftColor";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderLeftStyle: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "borderLeftStyle";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderLeftWidth: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "borderLeftWidth";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderRightColor: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "borderRightColor";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderRightStyle: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "borderRightStyle";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderRightWidth: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "borderRightWidth";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        borderCollapse: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "borderCollapse";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        boxShadow: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly xs: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly sm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly md: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly lg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly xl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "2xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly inset: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly primaryOutline: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "dark-lg": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "boxShadow";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        transform: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "transform";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        transition: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "transition";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        transitionProperty: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "transitionProperty";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        transitionDuration: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "transitionDuration";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        animation: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "animation";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        textDecoration: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "textDecoration";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        zIndex: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: {
                readonly "-1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "40": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "50": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly "100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
                readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            };
            name: "zIndex";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        fontVariantNumeric: {
            dynamic: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            dynamicScale: true;
            name: "fontVariantNumeric";
            vars: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
    };
} & {
    config: {
        bg: {
            mappings: "backgroundColor"[];
        };
        border: {
            mappings: ("borderColor" | "borderStyle" | "borderWidth")[];
        };
    };
}]>;
export type Sprinkles = Parameters<typeof rainbowSprinkles>[0];
type Children = React.ReactNode;
interface BaseComponentProps {
    className?: string;
    class?: string;
    classList?: string;
    children?: Children;
    forwardedRef?: any;
}
type NumberFormatOptions = {
    minimumFractionDigits: number;
    maximumFractionDigits: number;
};
export type GridColumn = {
    id: string;
    width?: Sprinkles["width"];
    label?: string;
    align?: "left" | "center" | "right";
    color?: Sprinkles["color"];
    textTransform?: Sprinkles["textTransform"];
    render?: (value: any, column: GridColumn, isPinned?: boolean) => Children;
};
declare const ALL_ICON_NAMES: readonly ["walletFilled", "chevronRight", "closeFilled", "close", "copy", "checkboxCircle", "chromeBrowser", "verticalMore", "arrowDownS", "arrowUpS", "mobileWallet", "mobileWalletCircle", "restart", "restartCircle", "arrowLeftSLine", "add", "subtract", "arrowRightLine", "jaggedCheck", "priceTagLine", "sendLine", "fireLine", "uploadLine", "coinsLine", "shoppingBagLine", "informationLine", "arrowDownLine", "arrowUpDownLine", "arrowLeftRightLine", "moonLine", "sunLine", "arrowDropDown", "settingFill", "loaderLine", "errorWarningLine", "errorWarningFill", "checkLine", "checkFill", "informationLine", "informationFill", "loaderFill", "lock", "bardFill", "pencilLine", "arrowRightRounded", "discord", "github", "document", "twitter", "youtube", "astronaut", "stargazePixel", "link", "playFilled", "rocket", "monitor", "lightning", "truck", "playOutlinedThin", "playOutlinedThick", "previousOutlined", "nextOutlined", "externalLinkLine", "timeLine", "arrowDownload", "plusRound", "minusRound", "xCircle", "magnifier"];
export type IconName = (typeof ALL_ICON_NAMES)[number];
export interface IconProps extends BaseComponentProps {
    name: IconName;
    title?: string;
    size?: Sprinkles["fontSize"];
    color?: Sprinkles["color"];
    attributes?: Sprinkles;
    domAttributes?: any;
}
export interface ButtonProps extends BaseComponentProps {
    as?: "button" | "a";
    href?: string;
    variant?: ButtonVariant;
    intent?: ButtonIntent;
    size?: ButtonSize;
    disabled?: boolean;
    fluidWidth?: boolean;
    fluid?: boolean;
    iconSize?: IconProps["size"];
    leftIcon?: IconProps["name"];
    rightIcon?: IconProps["name"];
    buttonRef?: any;
    attributes?: Sprinkles;
    domAttributes?: any;
    isLoading?: boolean;
    spinnerPlacement?: "start" | "end";
    onClick?: (event: any) => void;
    onDoubleClick?: (event: any) => void;
    onMouseDown?: (event: any) => void;
    onMouseUp?: (event: any) => void;
    onMouseEnter?: (event: any) => void;
    onMouseLeave?: (event: any) => void;
    onMouseMove?: (event: any) => void;
    onMouseOver?: (event: any) => void;
    onMouseOut?: (event: any) => void;
    onKeyDown?: (event: any) => void;
    onKeyUp?: (event: any) => void;
    onKeyPress?: (event: any) => void;
    onFocus?: (event: any) => void;
    onBlur?: (event: any) => void;
    onInput?: (event: any) => void;
    onChange?: (event: any) => void;
    onSubmit?: (event: any) => void;
    onReset?: (event: any) => void;
    onScroll?: (event: any) => void;
    onWheel?: (event: any) => void;
    onDragStart?: (event: any) => void;
    onDrag?: (event: any) => void;
    onDragEnd?: (event: any) => void;
    onDragEnter?: (event: any) => void;
    onDragLeave?: (event: any) => void;
    onDragOver?: (event: any) => void;
    onDrop?: (event: any) => void;
    onTouchStart?: (event: any) => void;
    onTouchMove?: (event: any) => void;
    onTouchEnd?: (event: any) => void;
    onTouchCancel?: (event: any) => void;
}
type ButtonSize = "xs" | "sm" | "md" | "lg";
type ButtonVariant = "solid" | "outlined" | "link" | "ghost" | "unstyled";
type ButtonIntent = "primary" | "secondary" | "tertiary" | "text" | "warning" | "success" | "danger";
declare const connectButtonVariants: RuntimeFn<{
    variant: {
        square: string;
        list: string;
    };
}>;
type ConnectButtonVariants = RecipeVariants<typeof connectButtonVariants>;
declare class OverrideStyleManager {
    _overrideMap: ComponentOverrideMap;
    _theme: ThemeVariant;
    constructor(theme: ThemeVariant);
    update(overrideMap: ComponentOverrideMap | null, theme: ThemeVariant | null): void;
    applyOverrides(component: OverridableComponents): {
        [cssVarName: string]: string;
    };
}
export interface UIState {
    themeMode: ModePreference;
    theme: ThemeVariant;
    themeClass: string;
    themeClasses: [string, string];
    themeAccent: Accent;
    customTheme: string | null;
    themeDefs: Array<ThemeDef>;
    overrideStyleManager: OverrideStyleManager;
    _hasHydrated: boolean;
}
export interface UIAction {
    setThemeMode: (mode: ModePreference) => void;
    setTheme: (theme: ThemeVariant, themeClass: string) => void;
    setThemeDefs: (defs: Array<ThemeDef>, defaultTheme?: string) => void;
    setCustomTheme: (customTheme: string) => void;
    setThemeAccent: (accent: Accent) => void;
    setHasHydrated: (hasHydrated: boolean) => void;
}
interface I18nState {
    formatNumber: NumberFormatter;
}
interface I18nAction {
    setFormatNumberFn: (fn: NumberFormatter) => void;
}
export interface UIStore extends UIState, UIAction, I18nState, I18nAction {
}
export const store: Omit<Omit<StoreApi<UIStore>, "persist"> & {
    persist: {
        setOptions: (options: Partial<PersistOptions<UIStore, {
            themeMode: ModePreference;
        }>>) => void;
        clearStorage: () => void;
        rehydrate: () => Promise<void> | void;
        hasHydrated: () => boolean;
        onHydrate: (fn: (state: UIStore) => void) => () => void;
        onFinishHydration: (fn: (state: UIStore) => void) => () => void;
        getOptions: () => Partial<PersistOptions<UIStore, {
            themeMode: ModePreference;
        }>>;
    };
}, "setState"> & {
    setState(nextStateOrUpdater: UIStore | Partial<UIStore> | ((state: WritableDraft<UIStore>) => void), shouldReplace?: boolean | undefined): void;
};
export const skeletonClass: string;
type BoxProps = Sprinkles & {
    as?: any;
    className?: string;
    class?: string;
    children?: React.ReactNode;
    attributes?: any;
    rawCSS?: any;
    boxRef?: any;
    onClick?: (event: any) => void;
    onDoubleClick?: (event: any) => void;
    onMouseDown?: (event: any) => void;
    onMouseUp?: (event: any) => void;
    onMouseEnter?: (event: any) => void;
    onMouseLeave?: (event: any) => void;
    onMouseMove?: (event: any) => void;
    onMouseOver?: (event: any) => void;
    onMouseOut?: (event: any) => void;
    onKeyDown?: (event: any) => void;
    onKeyUp?: (event: any) => void;
    onKeyPress?: (event: any) => void;
    onFocus?: (event: any) => void;
    onBlur?: (event: any) => void;
    onInput?: (event: any) => void;
    onChange?: (event: any) => void;
    onSubmit?: (event: any) => void;
    onReset?: (event: any) => void;
    onScroll?: (event: any) => void;
    onWheel?: (event: any) => void;
    onDragStart?: (event: any) => void;
    onDrag?: (event: any) => void;
    onDragEnd?: (event: any) => void;
    onDragEnter?: (event: any) => void;
    onDragLeave?: (event: any) => void;
    onDragOver?: (event: any) => void;
    onDrop?: (event: any) => void;
    onTouchStart?: (event: any) => void;
    onTouchMove?: (event: any) => void;
    onTouchEnd?: (event: any) => void;
    onTouchCancel?: (event: any) => void;
};
export const Box: React.ForwardRefExoticComponent<ChildSprinkles<{
    display: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            flex: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            grid: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            block: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            inline: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            table: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "table-cell": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "table-row": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "inline-block": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "inline-flex": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "inline-grid": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: ("none" | "flex" | "grid" | "block" | "inline" | "table" | "table-cell" | "table-row" | "inline-block" | "inline-flex" | "inline-grid")[];
        name: "display";
    };
    position: {
        values: {
            fixed: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            absolute: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            relative: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            sticky: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: ("fixed" | "absolute" | "relative" | "sticky")[];
        name: "position";
    };
    padding: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "padding";
    };
    paddingLeft: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "paddingLeft";
    };
    paddingRight: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "paddingRight";
    };
    paddingTop: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "paddingTop";
    };
    paddingBottom: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "paddingBottom";
    };
    width: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "width";
    };
    height: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "height";
    };
    minWidth: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "minWidth";
    };
    minHeight: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "minHeight";
    };
    maxWidth: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "maxWidth";
    };
    maxHeight: {
        values: {
            none: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            0: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            1: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            2: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            auto: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            10: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            20: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            30: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            3: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            4: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            5: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            6: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            7: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            8: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            9: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            11: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            12: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            13: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            14: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            15: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            16: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            17: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            18: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            19: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            21: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            22: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            23: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            24: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            25: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            26: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            27: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            28: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            29: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            full: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            fit: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            max: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            min: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewHeight: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            viewWidth: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerSm: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerMd: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerLg: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            containerXl: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            prose: {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/5": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "1/2": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "2/3": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
            "3/4": {
                default: string;
                conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
            };
        };
        staticScale: {
            "1/5": string;
            "1/4": string;
            "1/3": string;
            "1/2": string;
            "2/3": string;
            "3/4": string;
            "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "maxHeight";
    };
} & {
    display: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "display";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    tableLayout: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "tableLayout";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    backgroundImage: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "backgroundImage";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    backgroundSize: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "backgroundSize";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    backgroundPosition: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "backgroundPosition";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    backgroundRepeat: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "backgroundRepeat";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    objectFit: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "objectFit";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    flex: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "flex";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    flexBasis: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "flexBasis";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    flexShrink: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "flexShrink";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    flexGrow: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "flexGrow";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    flexDirection: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "flexDirection";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    flexWrap: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "flexWrap";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    alignItems: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "alignItems";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    alignSelf: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "alignSelf";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    justifyContent: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "justifyContent";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    padding: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "padding";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    paddingLeft: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "paddingLeft";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    paddingRight: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "paddingRight";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    paddingTop: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "paddingTop";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    paddingBottom: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "paddingBottom";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    width: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "width";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    height: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "height";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    minWidth: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "minWidth";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    minHeight: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "minHeight";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    maxWidth: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "maxWidth";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    maxHeight: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "maxHeight";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    borderRadius: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly sm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly md: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly lg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly xl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "borderRadius";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    borderTopLeftRadius: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "borderTopLeftRadius";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    borderBottomLeftRadius: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "borderBottomLeftRadius";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    borderTopRightRadius: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "borderTopRightRadius";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    borderBottomRightRadius: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "borderBottomRightRadius";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    fontFamily: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "fontFamily";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    fontSize: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "3xs": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2xs": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly xs: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly sm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly md: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly lg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly xl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "fontSize";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    lineHeight: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly normal: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly shorter: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly short: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tall: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly taller: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "lineHeight";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    textAlign: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "textAlign";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    zIndex: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "-1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "40": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "50": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "zIndex";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    position: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "position";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    top: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "top";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    left: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "left";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    right: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "right";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    bottom: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "bottom";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    verticalAlign: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "verticalAlign";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    margin: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "margin";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    marginBottom: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "marginBottom";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    marginLeft: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "marginLeft";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    marginRight: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "marginRight";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    marginTop: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "marginTop";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    letterSpacing: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly tighter: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly normal: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly wide: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly wider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly widest: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "letterSpacing";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    textTransform: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "textTransform";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    fontWeight: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly hairline: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly thin: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly light: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly normal: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly medium: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly semibold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly bold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly extrabold: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "fontWeight";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    whiteSpace: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "whiteSpace";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    wordBreak: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "wordBreak";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    overflowWrap: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "overflowWrap";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    fill: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "fill";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    overflow: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "overflow";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    overflowX: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "overflowX";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    overflowY: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "overflowY";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    textOverflow: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "textOverflow";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    aspectRatio: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "aspectRatio";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    opacity: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "opacity";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    cursor: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "cursor";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridTemplateColumns: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridTemplateColumns";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    grid: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "grid";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridArea: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridArea";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridAutoColumns: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridAutoColumns";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridAutoFlow: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridAutoFlow";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridAutoRows: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridAutoRows";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridColumn: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridColumn";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridColumnEnd: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridColumnEnd";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridColumnStart: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridColumnStart";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridTemplate: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridTemplate";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridTemplateAreas: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridTemplateAreas";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridTemplateRows: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridTemplateRows";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridRow: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridRow";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridRowEnd: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridRowEnd";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gridRowStart: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "gridRowStart";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    gap: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "gap";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    columnGap: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "columnGap";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    rowGap: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: {
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "3": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "4": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "5": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "6": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "7": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "8": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "9": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "11": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "12": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "13": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "14": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "15": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "16": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "17": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "18": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "19": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "21": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "22": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "23": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "24": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "25": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "26": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "27": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "28": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "29": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly full: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly fit: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly max: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly min: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewHeight: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly viewWidth: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerSm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerMd: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerLg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly containerXl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly prose: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "rowGap";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    inset: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "inset";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    insetInlineStart: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "insetInlineStart";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    insetInlineEnd: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "insetInlineEnd";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    transform: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "transform";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    appearance: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "appearance";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
    userSelect: {
        dynamic: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
        dynamicScale: true;
        name: "userSelect";
        vars: {
            default: string;
            conditions: Record<"mobile" | "mdMobile" | "tablet" | "desktop", string>;
        };
    };
} & {
    p: {
        mappings: "padding"[];
    };
    pl: {
        mappings: "paddingLeft"[];
    };
    pr: {
        mappings: "paddingRight"[];
    };
    pt: {
        mappings: "paddingTop"[];
    };
    pb: {
        mappings: "paddingBottom"[];
    };
    paddingX: {
        mappings: ("paddingLeft" | "paddingRight")[];
    };
    paddingY: {
        mappings: ("paddingBottom" | "paddingTop")[];
    };
    px: {
        mappings: ("paddingLeft" | "paddingRight")[];
    };
    py: {
        mappings: ("paddingBottom" | "paddingTop")[];
    };
    m: {
        mappings: "margin"[];
    };
    mr: {
        mappings: "marginRight"[];
    };
    ml: {
        mappings: "marginLeft"[];
    };
    mt: {
        mappings: "marginTop"[];
    };
    mb: {
        mappings: "marginBottom"[];
    };
    marginX: {
        mappings: ("marginLeft" | "marginRight")[];
    };
    marginY: {
        mappings: ("marginBottom" | "marginTop")[];
    };
    mx: {
        mappings: ("marginLeft" | "marginRight")[];
    };
    my: {
        mappings: ("marginBottom" | "marginTop")[];
    };
}> & ChildSprinkles<{
    color: {
        values: {
            transparent: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            background: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            link: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            black: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackPrimary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackSecondary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            white: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            current: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            accent: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            accentText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            body: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            linkHover: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            text: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textInverse: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textSecondary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textMuted: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textDanger: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textWarning: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textPlaceholder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textSuccess: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            rewardBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            rewardContent: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            cardBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputBorder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputBorderFocus: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDangerBorder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDangerBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDisabledBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDisabledText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            progressBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            progressValue: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            progressCursor: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            trackBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            divider: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBgSelected: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBgActive: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            tagButtonText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            tagButtonBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            tagButtonBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidPrimaryBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidPrimaryBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidPrimaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidSecondaryBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidSecondaryBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidSecondaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonGhostText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonGhostTextHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshStakingSliderInfoPrimaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshStakingSliderInfoSecondaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshStakingSliderInfoSecondaryTextActive: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTabText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableCellText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableHeaderActionText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableHeaderActionSecondaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableCellBorder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            skeletonBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            overflowShadowBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        staticScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "color";
    };
    backgroundColor: {
        values: {
            transparent: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            background: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            link: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            black: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackPrimary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackSecondary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            white: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            current: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            accent: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            accentText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            body: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            linkHover: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            text: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textInverse: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textSecondary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textMuted: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textDanger: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textWarning: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textPlaceholder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textSuccess: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            rewardBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            rewardContent: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            cardBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputBorder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputBorderFocus: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDangerBorder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDangerBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDisabledBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDisabledText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            progressBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            progressValue: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            progressCursor: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            trackBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            divider: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBgSelected: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBgActive: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            tagButtonText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            tagButtonBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            tagButtonBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidPrimaryBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidPrimaryBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidPrimaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidSecondaryBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidSecondaryBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidSecondaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonGhostText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonGhostTextHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshStakingSliderInfoPrimaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshStakingSliderInfoSecondaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshStakingSliderInfoSecondaryTextActive: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTabText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableCellText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableHeaderActionText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableHeaderActionSecondaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableCellBorder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            skeletonBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            overflowShadowBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        staticScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "backgroundColor";
    };
    borderColor: {
        values: {
            transparent: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            background: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            link: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            black: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackPrimary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackSecondary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            white: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            current: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            whiteAlpha900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blackAlpha900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            gray900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            red900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            orange900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            yellow900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            green900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            blue900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple50: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple100: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple200: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple300: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple400: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple500: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple600: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple700: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple800: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            purple900: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            accent: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            accentText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            body: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            linkHover: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            text: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textInverse: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textSecondary: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textMuted: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textDanger: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textWarning: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textPlaceholder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            textSuccess: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            rewardBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            rewardContent: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            cardBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputBorder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputBorderFocus: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDangerBorder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDangerBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDisabledBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inputDisabledText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            progressBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            progressValue: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            progressCursor: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            trackBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            divider: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBgSelected: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            menuItemBgActive: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            tagButtonText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            tagButtonBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            tagButtonBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidPrimaryBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidPrimaryBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidPrimaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidSecondaryBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidSecondaryBgHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonSolidSecondaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonGhostText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshButtonGhostTextHovered: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshStakingSliderInfoPrimaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshStakingSliderInfoSecondaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshStakingSliderInfoSecondaryTextActive: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTabText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableCellText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableHeaderActionText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableHeaderActionSecondaryText: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            meshTableCellBorder: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            skeletonBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            overflowShadowBg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        staticScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "borderColor";
    };
    boxShadow: {
        values: {
            none: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            inset: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            sm: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            base: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            md: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            lg: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            xl: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            xs: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            "2xl": {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            primaryOutline: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            "dark-lg": {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        staticScale: {
            readonly xs: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly sm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly md: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly lg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly xl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inset: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primaryOutline: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "dark-lg": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "boxShadow";
    };
    visibility: {
        values: {
            hidden: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            visible: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
            collapse: {
                default: string;
                conditions: Record<"base" | "hover" | "active" | "focus", string>;
            };
        };
        staticScale: ("hidden" | "visible" | "collapse")[];
        name: "visibility";
    };
} & {
    color: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "color";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    outline: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "outline";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    visibility: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "visibility";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    filter: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "filter";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    fill: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "fill";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    stroke: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "stroke";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    backgroundColor: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "backgroundColor";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderWidth: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly sm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly md: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly lg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly xl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "borderWidth";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderStyle: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly solid: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly dotted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly dashed: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly groove: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly ridge: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly hidden: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly double: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inset: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly outset: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly unset: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "borderStyle";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderColor: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "borderColor";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderBottomColor: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "borderBottomColor";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderBottomStyle: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "borderBottomStyle";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderBottomWidth: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "borderBottomWidth";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderTopColor: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "borderTopColor";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderTopStyle: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "borderTopStyle";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderTopWidth: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "borderTopWidth";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderLeftColor: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "borderLeftColor";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderLeftStyle: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "borderLeftStyle";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderLeftWidth: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "borderLeftWidth";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderRightColor: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly black: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackPrimary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly white: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly transparent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly current: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly whiteAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blackAlpha900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly gray900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly red900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly orange900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly yellow900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly green900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly blue900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple50: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple100: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple200: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple300: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple400: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple500: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple600: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple700: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple800: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly purple900: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly accentText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly body: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly background: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly link: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly linkHover: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly text: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textInverse: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSecondary: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textMuted: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textDanger: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textWarning: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textPlaceholder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly textSuccess: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly rewardContent: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly cardBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBorderFocus: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDangerBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inputDisabledText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressValue: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly progressCursor: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly trackBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly divider: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgSelected: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly menuItemBgActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly tagButtonBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryBgHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonSolidSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshButtonGhostTextHovered: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoPrimaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshStakingSliderInfoSecondaryTextActive: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTabText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableHeaderActionSecondaryText: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly meshTableCellBorder: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly skeletonBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly overflowShadowBg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "borderRightColor";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderRightStyle: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "borderRightStyle";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderRightWidth: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "borderRightWidth";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    borderCollapse: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "borderCollapse";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    boxShadow: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly xs: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly sm: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly base: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly md: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly lg: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly xl: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "2xl": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly inset: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly primaryOutline: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly none: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "dark-lg": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "boxShadow";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    transform: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "transform";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    transition: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "transition";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    transitionProperty: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "transitionProperty";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    transitionDuration: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "transitionDuration";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    animation: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "animation";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    textDecoration: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "textDecoration";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    zIndex: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: {
            readonly "-1": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "0": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "10": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "20": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "30": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "40": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "50": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly "100": `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
            readonly auto: `var(--${string})` | `var(--${string}, ${string})` | `var(--${string}, ${number})`;
        };
        name: "zIndex";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
    fontVariantNumeric: {
        dynamic: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
        dynamicScale: true;
        name: "fontVariantNumeric";
        vars: {
            default: string;
            conditions: Record<"base" | "hover" | "active" | "focus", string>;
        };
    };
} & {
    bg: {
        mappings: "backgroundColor"[];
    };
    border: {
        mappings: ("borderColor" | "borderStyle" | "borderWidth")[];
    };
}> & {
    as?: any;
    className?: string;
    class?: string;
    children?: React.ReactNode;
    attributes?: any;
    rawCSS?: any;
    boxRef?: any;
    onClick?: (event: any) => void;
    onDoubleClick?: (event: any) => void;
    onMouseDown?: (event: any) => void;
    onMouseUp?: (event: any) => void;
    onMouseEnter?: (event: any) => void;
    onMouseLeave?: (event: any) => void;
    onMouseMove?: (event: any) => void;
    onMouseOver?: (event: any) => void;
    onMouseOut?: (event: any) => void;
    onKeyDown?: (event: any) => void;
    onKeyUp?: (event: any) => void;
    onKeyPress?: (event: any) => void;
    onFocus?: (event: any) => void;
    onBlur?: (event: any) => void;
    onInput?: (event: any) => void;
    onChange?: (event: any) => void;
    onSubmit?: (event: any) => void;
    onReset?: (event: any) => void;
    onScroll?: (event: any) => void;
    onWheel?: (event: any) => void;
    onDragStart?: (event: any) => void;
    onDrag?: (event: any) => void;
    onDragEnd?: (event: any) => void;
    onDragEnter?: (event: any) => void;
    onDragLeave?: (event: any) => void;
    onDragOver?: (event: any) => void;
    onDrop?: (event: any) => void;
    onTouchStart?: (event: any) => void;
    onTouchMove?: (event: any) => void;
    onTouchEnd?: (event: any) => void;
    onTouchCancel?: (event: any) => void;
} & React.RefAttributes<any>>;
interface ContainerProps extends Omit<BaseComponentProps, "className"> {
    as?: any;
    className?: string;
    children?: BaseComponentProps["children"];
    maxWidth?: Sprinkles["maxWidth"];
    attributes?: Sprinkles;
}
export function Container(props: ContainerProps): JSX.Element;
interface LinkProps extends Omit<BaseComponentProps, "className"> {
    as?: any;
    href: string;
    target?: string;
    rel?: string;
    underline?: boolean;
    background?: boolean;
    color?: Sprinkles["color"];
    className?: string;
    children?: React.ReactNode;
    attributes?: Sprinkles;
}
export function Link(props: LinkProps): JSX.Element;
interface StackProps extends Omit<BaseComponentProps, "className"> {
    as?: any;
    className?: string;
    boxRef?: any;
    children?: React.ReactNode;
    forwardedRef?: any;
    domAttributes?: any;
    attributes?: Sprinkles;
    direction?: "vertical" | "horizontal";
    space?: Sprinkles["gap"];
    flexWrap?: Sprinkles["flexWrap"];
    justify?: Sprinkles["justifyContent"];
    align?: Sprinkles["alignItems"];
    flex?: Sprinkles["flex"];
}
export function Stack(props: StackProps): JSX.Element;
interface CenterProps extends Omit<BaseComponentProps, "className"> {
    as?: any;
    className?: string;
    children?: React.ReactNode;
    forwardedRef?: any;
    domAttributes?: any;
    attributes?: Sprinkles;
    axis?: "horizontal" | "vertical" | "both";
}
export function Center(props: CenterProps): JSX.Element;
export function Icon(props: IconProps): JSX.Element;
type Variant = "body" | "heading";
export interface TextProps extends BaseComponentProps {
    as?: "code" | "div" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "label" | "p" | "span";
    color?: Sprinkles["color"];
    fontFamily?: Sprinkles["fontFamily"];
    fontSize?: Sprinkles["fontSize"];
    fontWeight?: Sprinkles["fontWeight"];
    letterSpacing?: Sprinkles["letterSpacing"];
    lineHeight?: Sprinkles["lineHeight"];
    textAlign?: Sprinkles["textAlign"];
    textTransform?: Sprinkles["textTransform"];
    whiteSpace?: Sprinkles["whiteSpace"];
    wordBreak?: Sprinkles["wordBreak"];
    variant?: Variant;
    ellipsis?: boolean;
    underline?: boolean;
    attributes?: Sprinkles;
    domAttributes?: any;
}
export function Text(props: TextProps): JSX.Element;
interface CalloutProps extends BaseComponentProps {
    title: string;
    intent?: IntentValues;
    iconName?: IconName;
    iconRender?: BaseComponentProps["children"];
    attributes?: Sprinkles;
}
export function Callout(props: CalloutProps): JSX.Element;
export interface SpinnerProps extends Omit<IconProps, "name"> {
}
export function Spinner(props: SpinnerProps): JSX.Element;
export function Button(props: ButtonProps): JSX.Element;
interface SkeletonProps extends BoxProps {
}
export function Skeleton(props: SkeletonProps): JSX.Element;
export interface ClipboardCopyTextProps extends BaseComponentProps {
    text: string;
    truncate?: "middle" | "end";
    midTruncateLimit?: "sm" | "md" | "lg";
    onCopied?: (event?: any) => void;
    className?: string;
}
export function ClipboardCopyText(props: ClipboardCopyTextProps): JSX.Element;
export interface ThemeProviderProps extends BaseComponentProps {
    accent?: Accent;
    defaultTheme?: UIState["theme"];
    themeMode?: UIState["themeMode"];
    overrides?: ComponentOverrideMap;
    children?: React.ReactNode;
    themeDefs?: Array<ThemeDef>;
    customTheme?: UIState["customTheme"];
}
export function ThemeProvider(props: ThemeProviderProps): JSX.Element;
export interface OverlaysManagerProps {
}
export function OverlaysManager(props: OverlaysManagerProps): JSX.Element;
export type ToastType = "default" | "action" | "success" | "error" | "loading";
export type ToastPosition = "top-left" | "top-right" | "bottom-left" | "bottom-right" | "top-center" | "bottom-center";
type PromiseLike<Data = any> = Promise<Data> | (() => Promise<Data>);
type ToastPromiseMessage = BaseComponentProps["children"] | string;
type ToastPromiseFrame = {
    message: ToastPromiseMessage;
    toastType: ToastType;
};
type PromiseData<ToastData = any> = ExternalToast & {
    loading: ToastPromiseMessage;
    success: ToastPromiseMessage | ((data: ToastData) => ToastPromiseMessage | ToastPromiseFrame);
    error: ToastPromiseMessage | ((error: any) => ToastPromiseMessage);
};
export interface ToastShape {
    id: number | string;
    title?: string | BaseComponentProps["children"];
    type?: ToastType;
    icon?: BaseComponentProps["children"];
    invert?: boolean;
    description?: string | BaseComponentProps["children"];
    duration?: number;
    delete?: boolean;
    important?: boolean;
    action?: {
        label: string;
        onClick: (event?: any) => void;
    };
    cancel?: {
        label: string;
        onClick?: () => void;
    };
    onDismiss?: (toast: ToastShape) => void;
    onAutoClose?: (toast: ToastShape) => void;
    promise?: PromiseLike;
    rawCSS?: any;
    className?: string;
    descriptionClassName?: string;
}
export interface ToastProps extends BaseComponentProps {
    toast: ToastShape;
    toasts: ToastShape[];
    index: number;
    expanded: boolean;
    invert: boolean;
    heights: ToastHeight[];
    setHeights: (heights: ToastHeight[]) => void;
    removeToast: (toast: ToastShape) => void;
    position: ToastPosition;
    visibleToasts: number;
    expandByDefault: boolean;
    closeButton: boolean;
    interacting: boolean;
    rawCSS?: any;
    duration?: number;
    className?: string;
    descriptionClassName?: string;
}
interface ToastHeight {
    height: number;
    toastId: number | string;
}
interface ToastOptions {
    className?: string;
    descriptionClassName?: string;
    rawCSS?: any;
}
export interface ToasterProps extends BaseComponentProps {
    invert?: boolean;
    position?: ToastPosition;
    hotkey?: string[];
    colorful?: boolean;
    expand?: boolean;
    duration?: number;
    visibleToasts?: number;
    closeButton?: boolean;
    toastOptions?: ToastOptions;
    rawCSS?: any;
    offset?: string | number;
}
type ExternalToast = Omit<ToastShape, "id" | "type" | "title"> & {
    id?: number | string;
};
export const toast: ((message: string | Children, data?: ExternalToast) => string | number) & {
    success: (message: string | Children, data?: ExternalToast) => string | number;
    error: (message: string | Children, data?: ExternalToast) => string | number;
    message: (message: string | Children, data?: ExternalToast) => string | number;
    promise: <ToastData>(promise: PromiseLike<ToastData>, data?: PromiseData<ToastData>) => string | number;
    dismiss: (id?: number | string) => string | number;
    custom: (type: ToastType, message: string | Children, data?: ExternalToast) => string | number;
};
export function Toast(props: ToastProps): JSX.Element;
export function Toaster(props: ToasterProps): JSX.Element;
interface InterchainUIProviderProps {
    themeOptions?: ThemeProviderProps;
    toastOptions?: ToasterProps;
    children?: BaseComponentProps["children"];
}
export function InterchainUIProvider(props: InterchainUIProviderProps): JSX.Element;
interface FadeInProps {
    isVisible: boolean;
    durationMs?: number;
    delayMs?: number;
    children: BaseComponentProps["children"];
}
export function FadeIn(props: FadeInProps): JSX.Element;
type TokenDataCard = {
    title: string;
    price: string;
    iconUrl: string;
};
type RewardCountdownCard = {
    title: string;
    seconds: string;
    minutes: string;
    hours: string;
};
type RewardDataCard = {
    title: string;
    rewardAmount: string;
    rewardTokenName: string;
    rewardNotionalValue: string;
};
export interface PoolsHeaderProps extends BaseComponentProps {
    title?: string;
    tokenData: TokenDataCard;
    rewardCountdownData: RewardCountdownCard;
    rewardData: RewardDataCard;
    attributes?: Sprinkles;
}
export function PoolsHeader(props: PoolsHeaderProps): JSX.Element;
export interface ListItemProps extends BaseComponentProps {
    isSelected?: boolean;
    isActive?: boolean;
    isDisabled?: boolean;
    size?: "sm" | "md";
    attributes?: any;
    sprinkles?: Sprinkles;
    itemRef?: any;
}
export interface ChainListItemProps extends BaseComponentProps {
    isActive?: ListItemProps["isActive"];
    isSelected?: ListItemProps["isSelected"];
    size?: ListItemProps["size"];
    attributes?: ListItemProps["attributes"];
    sprinkles?: ListItemProps["sprinkles"];
    itemRef?: ListItemProps["itemRef"];
    iconUrl?: string;
    name: string;
    tokenName: string;
    amount?: string;
    notionalValue?: string;
}
type AvailableItem = {
    imgSrc: string;
    symbol: string;
    name: string;
    denom?: string;
    /**
     * Available amount
     */
    available?: number;
    /**
     * Dollar price for per token
     */
    priceDisplayAmount?: number;
};
type PartialAmount = {
    label: string;
    percentage: number;
};
export interface TransferItemProps extends BaseComponentProps {
    /**
     * Drop down list of available items
     */
    dropdownList: AvailableItem[];
    /**
     * If show the available amount
     */
    hasAvailable?: boolean;
    availableLabel?: string;
    partials?: PartialAmount[];
    /**
     * Title of the transfer-item
     */
    title?: string;
    placeholder?: string;
    onChange?: (item: AvailableItem, value: number) => void;
    onInput?: (item: AvailableItem, rawValue: string) => void;
    /**
     * Disabled status of input
     */
    disabled?: boolean;
    /**
     * Callback when value changed of dropdown
     * @param selectItem
     * @returns
     */
    onItemSelected?: (selectItem: AvailableItem) => void;
    selectedItem: AvailableItem;
    defaultSelectedItem?: AvailableItem;
    amount?: number;
    defaultAmountPrice?: string;
    availableAsMax?: boolean;
    isSmall?: boolean;
    filterFn?: (options: Array<ChainListItemProps>, query: string) => Array<ChainListItemProps>;
}
type AddItem = {
    progress: number;
    value: string;
};
export interface AddLiquidityProps {
    poolAssets: PoolListItemProps["poolAssets"];
    onAddLiquidity: (event?: any) => void;
    onChange: (values: AddItem[]) => void;
    isLoading?: boolean;
}
export interface BondingListItemSmProps {
    title: string;
    bondedValue: APR["bondedShares"];
    bondedShares: APR["bondedShares"];
    totalApr: APR["totalApr"];
    isUnbondLoading?: boolean;
    isBondLoading?: boolean;
    onBond?: (event?: any) => void;
    onUnbond?: (event?: any) => void;
}
export interface ManageLiquidityCardProps extends BaseComponentProps {
    totalBalanceCoins: Coin[];
    totalBalance: PoolDetailProps["totalBalance"];
    totalShares: PoolDetailProps["totalShares"];
    lpTokenBalance: PoolDetailProps["lpTokenBalance"];
    lpTokenShares: PoolDetailProps["lpTokenShares"];
    isEarningLoading?: boolean;
    onStartEarning: (event?: any) => void;
    onAdd: (event?: any) => void;
    onRemove: (event?: any) => void;
    attributes?: any;
}
export interface RemoveLiquidityProps {
    unbondedBalance: PoolDetailProps["unbondedBalance"];
    unbondedShares: PoolDetailProps["unbondedShares"];
    myLiquidityCoins: Coin[];
    isLoading?: boolean;
    onRemoveLiquidity: (event?: any) => void;
    onChange: (progress: number) => void;
}
type APR = {
    totalApr: string;
    swapFeeApr: {
        swapFeeValuePerDay: string;
        apr: string;
    };
    bondedShares: string | number;
    bondedValue: string | number;
    superfluidApr?: string;
    amount?: string;
};
interface Coin {
    symbol: string;
    imgSrc: string;
    displayAmount?: string;
}
export interface PoolListItemProps extends BaseComponentProps {
    id: string;
    poolAssets: AvailableItem[];
    liquidity: number | string;
    apr: string;
    fees7D?: number;
    volume24H?: number | string;
    onClick?: (event?: any) => void;
}
interface PoolDetailProps {
    bonded: number | string;
    myLiquidity: string;
    swapFee: number | string;
    totalBalance: string;
    totalShares: string;
    lpTokenBalance: string;
    lpTokenShares: string;
    totalBalanceCoins: Coin[];
    unbondedBalance: string;
    unbondedShares: string;
    myLiquidityCoins: Coin[];
    onAddLiquidity: AddLiquidityProps["onAddLiquidity"];
    onRemoveLiquidity: RemoveLiquidityProps["onRemoveLiquidity"];
    onBond: BondingListItemSmProps["onBond"];
    onUnbond: BondingListItemSmProps["onUnbond"];
    onStartEarning: ManageLiquidityCardProps["onStartEarning"];
}
type OmittedProps = "leftIcon" | "rightIcon";
type ButtonEventHandlers = Pick<ButtonProps, "onClick" | "onDoubleClick" | "onMouseDown" | "onMouseUp" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseOver" | "onMouseOut" | "onKeyDown" | "onKeyUp" | "onKeyPress" | "onFocus" | "onBlur" | "onInput" | "onChange" | "onSubmit" | "onReset" | "onScroll" | "onWheel" | "onDragStart" | "onDrag" | "onDragEnd" | "onDragEnter" | "onDragLeave" | "onDragOver" | "onDrop" | "onTouchStart" | "onTouchMove" | "onTouchEnd" | "onTouchCancel">;
interface BaseButtonProps extends Omit<ButtonProps, OmittedProps> {
}
export interface IconButtonProps extends BaseButtonProps, ButtonEventHandlers {
    isRound?: boolean;
    icon: IconProps["name"];
}
export function IconButton(props: IconButtonProps): JSX.Element;
export function PoolListItem(props: PoolListItemProps): JSX.Element;
export interface PoolListProps {
    title: string;
    list: PoolListItemProps[];
}
export function PoolList(props: PoolListProps): JSX.Element;
export interface PoolCardProps extends PoolListItemProps {
    myLiquidity: PoolDetailProps["myLiquidity"];
    unbondedBalance: PoolDetailProps["unbondedBalance"];
}
export function PoolCard(props: PoolCardProps): JSX.Element;
export interface PoolCardListProps {
    list: PoolCardProps[];
}
export function PoolCardList(props: PoolCardListProps): JSX.Element;
export interface AnimateLayoutProps extends BaseComponentProps {
}
export function AnimateLayout(props: AnimateLayoutProps): JSX.Element;
export interface ConnectModalProps extends BaseComponentProps {
    isOpen: boolean;
    onOpen?: (event?: any) => void;
    onClose?: (event?: any) => void;
    header: BaseComponentProps["children"];
    children?: BaseComponentProps["children"];
    className?: string;
    modalContainerClassName?: string;
    modalContentClassName?: string;
    modalChildrenClassName?: string;
    modalContentStyles?: any;
}
export function useTheme(): {
    hasHydrated: boolean;
    theme: ThemeVariant;
    themeClass: string;
    setTheme: (mode: ModePreference) => void;
    colorMode: ThemeVariant;
    setColorMode: (mode: ModePreference) => void;
    toggleColorMode: () => void;
    getThemeRef: (node: HTMLDivElement | null) => void;
};
interface ModalProps {
    isOpen: boolean;
    initialOpen?: boolean;
    onOpen?: (event?: React.SyntheticEvent) => void;
    onClose?: (event?: React.SyntheticEvent) => void;
    initialFocusRef?: React.MutableRefObject<unknown>;
    renderTrigger?: (props: unknown) => React.ReactNode;
    header: React.ReactNode;
    children?: React.ReactNode;
    closeOnClickaway?: boolean;
    preventScroll?: boolean;
    role?: "dialog" | "alertdialog";
    root?: HTMLElement | null | React.MutableRefObject<HTMLElement | null>;
    className?: string;
    themeClassName?: string;
    contentStyles?: React.CSSProperties;
    contentClassName?: string;
    backdropClassName?: string;
    childrenClassName?: string;
}
export const Modal: React.ForwardRefExoticComponent<ModalProps & React.RefAttributes<HTMLDivElement>>;
export function ConnectModal(props: ConnectModalProps): JSX.Element;
export interface ConnectModalHeadProps extends BaseComponentProps {
    title: string;
    hasBackButton?: boolean;
    hasCloseButton?: boolean;
    onClose: (event: any) => void;
    onBack?: (event: any) => void;
    id?: string;
    titleProps?: any;
    closeButtonProps?: any;
}
export function ConnectModalHead(props: ConnectModalHeadProps): JSX.Element;
export type QRCodeStatus = "Pending" | "Done" | "Error" | "Expired";
interface ConnectModalQRCodeProps extends BaseComponentProps {
    status: QRCodeStatus;
    link: string;
    description: string;
    qrCodeSize?: number;
    errorTitle?: any;
    errorDesc?: any;
    onRefresh?: () => void;
}
export function ConnectModalQRCodeSkeleton(props: any): JSX.Element;
declare namespace qrcodegen {
    type bit = number;
    type byte = number;
    type int = number;
    export class QrCode {
        readonly version: int;
        readonly errorCorrectionLevel: QrCode.Ecc;
        static encodeText(text: string, ecl: QrCode.Ecc): QrCode;
        static encodeBinary(data: Readonly<Array<byte>>, ecl: QrCode.Ecc): QrCode;
        static encodeSegments(segs: Readonly<Array<QrSegment>>, ecl: QrCode.Ecc, minVersion?: int, maxVersion?: int, mask?: int, boostEcl?: boolean): QrCode;
        readonly size: int;
        readonly mask: int;
        private readonly modules;
        private readonly isFunction;
        constructor(version: int, errorCorrectionLevel: QrCode.Ecc, dataCodewords: Readonly<Array<byte>>, msk: int);
        getModule(x: int, y: int): boolean;
        getModules(): boolean[][];
        private drawFunctionPatterns;
        private drawFormatBits;
        private drawVersion;
        private drawFinderPattern;
        private drawAlignmentPattern;
        private setFunctionModule;
        private addEccAndInterleave;
        private drawCodewords;
        private applyMask;
        private getPenaltyScore;
        private getAlignmentPatternPositions;
        private static getNumRawDataModules;
        private static getNumDataCodewords;
        private static reedSolomonComputeDivisor;
        private static reedSolomonComputeRemainder;
        private static reedSolomonMultiply;
        private finderPenaltyCountPatterns;
        private finderPenaltyTerminateAndCount;
        private finderPenaltyAddHistory;
        static readonly MIN_VERSION: int;
        static readonly MAX_VERSION: int;
        private static readonly PENALTY_N1;
        private static readonly PENALTY_N2;
        private static readonly PENALTY_N3;
        private static readonly PENALTY_N4;
        private static readonly ECC_CODEWORDS_PER_BLOCK;
        private static readonly NUM_ERROR_CORRECTION_BLOCKS;
    }
    export class QrSegment {
        readonly mode: QrSegment.Mode;
        readonly numChars: int;
        private readonly bitData;
        static makeBytes(data: Readonly<Array<byte>>): QrSegment;
        static makeNumeric(digits: string): QrSegment;
        static makeAlphanumeric(text: string): QrSegment;
        static makeSegments(text: string): Array<QrSegment>;
        static makeEci(assignVal: int): QrSegment;
        static isNumeric(text: string): boolean;
        static isAlphanumeric(text: string): boolean;
        constructor(mode: QrSegment.Mode, numChars: int, bitData: Array<bit>);
        getData(): Array<bit>;
        static getTotalBits(segs: Readonly<Array<QrSegment>>, version: int): number;
        private static toUtf8ByteArray;
        private static readonly NUMERIC_REGEX;
        private static readonly ALPHANUMERIC_REGEX;
        private static readonly ALPHANUMERIC_CHARSET;
    }
    export {};
}
declare namespace qrcodegen.QrCode {
    type int = number;
    export class Ecc {
        readonly ordinal: int;
        readonly formatBits: int;
        static readonly LOW: Ecc;
        static readonly MEDIUM: Ecc;
        static readonly QUARTILE: Ecc;
        static readonly HIGH: Ecc;
        private constructor();
    }
    export {};
}
declare namespace qrcodegen.QrSegment {
    type int = number;
    export class Mode {
        readonly modeBits: int;
        private readonly numBitsCharCount;
        static readonly NUMERIC: Mode;
        static readonly ALPHANUMERIC: Mode;
        static readonly BYTE: Mode;
        static readonly KANJI: Mode;
        static readonly ECI: Mode;
        private constructor();
        numCharCountBits(ver: int): int;
    }
    export {};
}
type ImageSettings = {
    src: string;
    height: number;
    width: number;
    excavate: boolean;
    x?: number;
    y?: number;
};
export interface QRProps extends BaseComponentProps {
    value: string;
    size?: number;
    level?: string;
    bgColor?: string;
    fgColor?: string;
    includeMargin?: boolean;
    marginSize?: number;
    imageSettings?: ImageSettings;
    title?: string;
}
export function QRCode(props: QRProps): JSX.Element;
export interface ConnectModalQRCodeErrorProps extends BaseComponentProps {
    qrCodeSize?: number;
    onRefresh?: (event?: any) => void;
}
export function ConnectModalQRCodeError(props: ConnectModalQRCodeErrorProps): JSX.Element;
export function ConnectModalQRCode(props: ConnectModalQRCodeProps): JSX.Element;
export interface ConnectModalWalletButtonProps extends BaseComponentProps {
    variant?: ConnectButtonVariants["variant"];
    logo: string;
    subLogo?: LiteralUnion<"walletConnect", string>;
    btmLogo?: LiteralUnion<"MetaMask", string>;
    name: string;
    prettyName?: string;
    badge?: string;
    onClick?: any;
}
interface Wallet {
    name: string;
    prettyName?: string;
    logo: string;
    subLogo?: string;
    btmLogo?: string;
    mobileDisabled: boolean;
    downloadUrl?: string;
    rejectMessage?: string;
    originalWallet?: any;
    badge?: string;
    shape?: ConnectModalWalletButtonProps["variant"];
}
export interface ConnectModalWalletListProps extends BaseComponentProps {
    wallets: Wallet[];
    onWalletItemClick?: (wallet: any) => void;
    className?: string;
}
interface ConnectedInfo {
    name?: string;
    avatar?: any;
    address: string;
}
export interface ConnectModalStatusProps extends BaseComponentProps {
    wallet: Wallet;
    status: "Disconnected" | "Connecting" | "Connected" | "NotExist" | "Rejected" | "Error";
    contentHeader?: string;
    contentDesc?: string;
    bottomLink?: string;
    onConnect?: () => void;
    connectedInfo?: ConnectedInfo;
    onDisconnect?: () => void;
    onChangeWallet?: () => void;
    disableInstall?: boolean;
    onInstall?: () => void;
    installIcon?: BaseComponentProps["children"];
}
export function ConnectModalStatus(props: ConnectModalStatusProps): JSX.Element;
type AvatarFallbackMode = "initials" | "bg";
interface AvatarImageProps extends BaseComponentProps {
    src?: string;
    srcSet?: string;
    width?: string;
    height?: string;
    name: string;
    borderRadius?: Sprinkles["borderRadius"];
    loading?: "eager" | "lazy";
    ignoreFallback?: boolean;
    referrerPolicy?: string;
    crossOrigin?: string;
    sizes?: string;
    fallbackMode?: AvatarFallbackMode;
    onError?: (error?: any) => void;
    onLoad?: (event?: any) => void;
    getInitials?: (name: string) => string;
}
interface AvatarNameProps extends BaseComponentProps {
    name: string;
    getInitials?: (name: string) => string;
    children?: React.ReactNode;
    boxRef?: any;
    showInitials?: boolean;
    attributes?: Sprinkles;
}
type AvatarSize = "3xs" | "2xs" | "xs" | "sm" | "md" | "lg" | "xl" | "2xl";
export interface AvatarProps extends AvatarImageProps, Omit<AvatarNameProps, "boxRef"> {
    size?: AvatarSize;
    rounded?: boolean;
    showBorder?: boolean;
    fallbackMode?: AvatarFallbackMode;
    borderColor?: Sprinkles["borderColor"];
    backgroundColor?: Sprinkles["backgroundColor"];
}
type AvatarBadgePlacement = "top-left" | "top-right" | "bottom-left" | "bottom-right";
export interface AvatarBadgeProps extends BaseComponentProps {
    boxRef?: any;
    attributes?: any;
    size?: string;
    placement?: AvatarBadgePlacement;
    borderWidth?: Sprinkles["borderWidth"];
}
export function AvatarName(props: AvatarNameProps): JSX.Element;
export function AvatarImage(props: AvatarImageProps): JSX.Element;
export function Avatar(props: AvatarProps): JSX.Element;
export function AvatarBadge(props: AvatarBadgeProps): JSX.Element;
export function ConnectModalWalletList(props: ConnectModalWalletListProps): JSX.Element;
export function ConnectModalWalletButton(props: ConnectModalWalletButtonProps): JSX.Element;
interface RevealProps extends BaseComponentProps {
    hideThresholdHeight?: number;
    showMoreLabel?: string;
    showLessLabel?: string;
    fadeBackground?: {
        light: Sprinkles["backgroundColor"];
        dark: Sprinkles["backgroundColor"];
    };
    children: BaseComponentProps["children"];
}
export function Reveal(props: RevealProps): JSX.Element;
interface I18nProviderProps extends Intl.NumberFormatOptions {
    locale?: string;
    children: BaseComponentProps["children"];
}
export function I18nProvider(props: I18nProviderProps): JSX.Element;
export interface PoolInfoHeaderProps {
    id: string;
    liquidity: number | string;
    swapFee: number | string;
    volume24H: number | string;
    coins: Coin[];
}
export function PoolInfoHeader(props: PoolInfoHeaderProps): JSX.Element;
export function ManageLiquidityCard(props: ManageLiquidityCardProps): JSX.Element;
export interface BondingCardProps {
    title: string;
    value: string;
}
export function BondingCard(props: BondingCardProps): JSX.Element;
export interface BondingCardListProps {
    list: BondingCardProps[];
}
export function BondingCardList(props: BondingCardListProps): JSX.Element;
export interface BondingListItemProps {
    title: string;
    superfluidApr: string;
    amount: number | string;
    totalApr: string;
    onUnbond: (event?: any) => void;
    isLoading?: boolean;
}
export function BondingListItem(props: BondingListItemProps): JSX.Element;
export interface BondingListProps {
    list: BondingListItemProps[];
}
export function BondingList(props: BondingListProps): JSX.Element;
export function BondingListItemSm(props: BondingListItemSmProps): JSX.Element;
export interface BondingListSmProps {
    list: BondingListItemSmProps[];
    title?: string;
    description?: string;
    unbondedTitle?: string;
    unbondedSharesTitle?: string;
    unbondedBalance: number | string;
    unbondedShares: number | string;
}
export function BondingListSm(props: BondingListSmProps): JSX.Element;
export interface ProgressBarProps {
    progress: number;
    onProgressChange: (progress: number) => void;
}
export function ProgressBar(props: ProgressBarProps): JSX.Element;
export interface CircularProgressBarProps {
    progress: number;
    width?: number;
}
export function CircularProgressBar(props: CircularProgressBarProps): JSX.Element;
export interface TokenInputProps {
    attributes?: BoxProps["attributes"];
    progress?: number;
    amount?: number;
    symbol?: AvailableItem["symbol"];
    name?: AvailableItem["name"];
    available?: AvailableItem["available"];
    priceDisplayAmount?: AvailableItem["priceDisplayAmount"];
    tokenIcon?: LiteralUnion<IconName, string>;
    title?: string | undefined;
    hasProgressBar?: boolean;
    minValue?: number;
    maxValue?: number;
    notionalValue?: string;
    formatNotionalValue?: (tokenAmount: number, pricePerToken: number) => string;
    onProgressChange?: (progress: number) => void;
    onAmountChange?: (value: number) => void;
    onFocus?: (e?: any) => void;
    inputClass?: string;
    imgClass?: string;
}
export interface FieldLabelProps extends BaseComponentProps {
    id?: string;
    htmlFor: string | false;
    label?: BaseComponentProps["children"];
    disabled?: boolean;
    size?: "sm" | "md" | "lg";
    description?: BaseComponentProps["children"];
    descriptionId?: string;
    attributes?: any;
    labelAttributes?: any;
}
export function FieldLabel(props: FieldLabelProps): JSX.Element;
interface NumberInputProps {
    defaultValue?: number;
    value?: number;
    minValue?: number;
    maxValue?: number;
    incrementButton?: ReactNode;
    decrementButton?: ReactNode;
    canIncrement?: boolean;
    canDecrement?: boolean;
    clampValueOnBlur?: boolean;
    id?: string;
    isDisabled?: boolean;
    isReadOnly?: boolean;
    autoFocus?: boolean;
    formatOptions?: AriaNumberFieldProps["formatOptions"];
    name?: string;
    label?: string;
    onChange?: (value: number) => void;
    onInput?: AriaNumberFieldProps["onInput"];
    onBlur?: AriaNumberFieldProps["onBlur"];
    onFocus?: AriaNumberFieldProps["onFocus"];
    onFocusChange?: (isFocused: boolean) => void;
    onKeyDown?: AriaNumberFieldProps["onKeyDown"];
    onKeyUp?: AriaNumberFieldProps["onKeyUp"];
    textAlign?: Sprinkles["textAlign"];
    fontSize?: Sprinkles["fontSize"];
    attributes?: Sprinkles & React.HTMLAttributes<HTMLDivElement>;
    size?: "sm" | "md" | "lg";
    placeholder?: string | undefined;
    intent?: "default" | "error";
    className?: string;
    inputContainer?: string;
    inputClassName?: string;
    borderless?: boolean;
}
export const NumberField: React.ForwardRefExoticComponent<NumberInputProps & React.RefAttributes<HTMLInputElement>>;
export function TokenInput(props: TokenInputProps): JSX.Element;
export function AddLiquidity(props: AddLiquidityProps): JSX.Element;
export function RemoveLiquidity(props: RemoveLiquidityProps): JSX.Element;
export interface BondingMoreProps {
    bondingName: string;
    available: number | string;
    onBond: (event?: any) => void;
    onChange: (value: number) => void;
    isLoading?: boolean;
    value: number;
}
export function BondingMore(props: BondingMoreProps): JSX.Element;
type HeaderInfo = {
    label: string;
    value: string;
};
type MultiChainHeader = [HeaderInfo, HeaderInfo];
type SingleChainHeader = HeaderInfo;
export interface AssetListHeaderProps extends BaseComponentProps {
    title: string;
    multiChainHeader?: MultiChainHeader;
    singleChainHeader?: SingleChainHeader;
    depositButtonLabel?: string;
    withdrawButtonLabel?: string;
    showDeposit?: boolean;
    showWithdraw?: boolean;
    onDeposit?: (event?: any) => void;
    onWithdraw?: (event?: any) => void;
    attributes?: any;
}
export function AssetListHeader(props: AssetListHeaderProps): JSX.Element;
export interface AssetListItemProps extends BaseComponentProps {
    isOtherChains?: boolean;
    imgSrc: string;
    symbol: string;
    name: string;
    tokenAmount: string;
    tokenAmountPrice: string;
    chainName?: string;
    needChainSpace?: boolean;
    depositLabel?: string;
    withdrawLabel?: string;
    showDeposit?: boolean;
    showWithdraw?: boolean;
    onDeposit?: (event?: any) => void;
    onWithdraw?: (event?: any) => void;
}
export function AssetListItem(props: AssetListItemProps): JSX.Element;
export interface AssetListProps extends BaseComponentProps {
    isOtherChains: boolean;
    needChainSpace: boolean;
    list: AssetListItemProps[];
    titles?: [string, string];
    attributes?: any;
}
export function AssetList(props: AssetListProps): JSX.Element;
export type CrossChainListItemProps = Omit<AssetListItemProps, "isOtherChains">;
export interface CrossChainProps extends Omit<AssetListHeaderProps, "singleChainHeader"> {
    list: Array<CrossChainListItemProps>;
    listTitle: string;
    otherList: Array<CrossChainListItemProps>;
    otherListTitle: string;
}
export function CrossChain(props: CrossChainProps): JSX.Element;
export type SingleChainListItemProps = Omit<AssetListItemProps, "isOtherChains">;
export interface SingleChainProps extends Omit<AssetListHeaderProps, "multiChainHeader"> {
    isLoading?: boolean;
    list: Array<SingleChainListItemProps>;
    listTitle: string;
}
export function SingleChain(props: SingleChainProps): JSX.Element;
export interface ChainSwapInputProps extends BaseComponentProps {
    size?: "sm" | "md";
    attributes?: any;
    sprinkles?: Sprinkles;
    containerRef?: any;
    inputAttributes?: any;
    inputClassName?: string;
    isOpen?: boolean;
    value: string;
    placeholder?: string;
    label: string;
    iconUrl?: string;
    amount?: string;
    notionalValue?: string;
    onDropdownArrowClicked: (event?: any) => void;
    endAddon?: Children | undefined;
}
export const ChainSwapInput: React.ForwardRefExoticComponent<ChainSwapInputProps & React.RefAttributes<any>>;
export const ListItem: React.ForwardRefExoticComponent<ListItemProps & React.RefAttributes<any>>;
export function ChainListItem(props: ChainListItemProps): JSX.Element;
interface ItemProps {
    isActive: boolean;
    isSelected: boolean;
    size: ChainListItemProps["size"];
    iconUrl?: ChainListItemProps["iconUrl"];
    name: ChainListItemProps["name"];
    tokenName: ChainListItemProps["tokenName"];
    amount?: ChainListItemProps["amount"];
    notionalValue?: ChainListItemProps["notionalValue"];
}
type ComboboxOption = Omit<ItemProps, "isActive" | "size" | "isSelected">;
interface ChainSwapComboboxProps {
    size: ChainListItemProps["size"];
    maxHeight?: number;
    options: Array<ComboboxOption>;
    filterFn?: (options: Array<ComboboxOption>, query: string) => Array<ComboboxOption>;
    defaultSelected?: ComboboxOption;
    onItemSelected?: (selected: ComboboxOption) => void;
    defaultOpen?: boolean;
    endAddon?: React.ReactNode | undefined;
    valueItem: ComboboxOption;
    placeholder?: string;
    className?: string;
    rootNode?: HTMLElement;
    inputClassName?: string;
    attributes?: Sprinkles;
    offsetX?: number;
    virtualization?: {
        itemSize: number;
        overscan: number;
    };
}
export function ChainSwapCombobox(props: ChainSwapComboboxProps): JSX.Element;
export function TransferItem(props: TransferItemProps): JSX.Element;
export interface OverviewTransferProps extends BaseComponentProps {
    inputLabel?: string;
    dropdownList: AvailableItem[];
    selectedItem?: AvailableItem;
    defaultSelected?: AvailableItem;
    isSubmitDisabled?: boolean;
    fromChainLogoUrl: string;
    toChainLogoUrl: string;
    transferLabel?: string;
    cancelLabel?: string;
    timeEstimateLabel?: string;
    onTransfer: (event?: any) => void;
    onChange: (selectedItem: AvailableItem, value: number) => void;
    onCancel: (event?: any) => void;
}
export function OverviewTransfer(props: OverviewTransferProps): JSX.Element;
type FieldBaseProps = {
    id: string;
    value?: any;
    labelId?: string;
    name?: string | undefined;
    disabled?: boolean;
    readonly?: boolean;
    autoComplete?: string | undefined;
    description?: string | undefined;
    message?: Children;
    "aria-describedby"?: string | undefined;
    data?: any;
    autoFocus?: boolean;
    prefix?: string;
    required?: boolean;
};
declare const validTypes: {
    text: string;
    password: string;
    email: string;
    search: string;
    number: string;
    tel: string;
    url: string;
};
type InputMode = "text" | "email" | "search" | "numeric" | "tel" | "url";
export interface TextFieldProps extends BaseComponentProps, FieldBaseProps {
    value: string;
    type?: keyof typeof validTypes;
    inputMode?: InputMode;
    intent?: "default" | "error";
    onChange?: (e: any) => void;
    onBlur?: (e?: any) => void;
    onFocus?: (e?: any) => void;
    onClear?: (event?: any) => void;
    size?: "sm" | "md";
    placeholder?: string | undefined;
    label?: Children | undefined;
    clearLabel?: string;
    attributes?: any;
    inputAttributes?: any;
    startAddon?: Children | undefined;
    endAddon?: Children | undefined;
    inputContainer?: string;
    inputClassName?: string;
}
export interface TextFieldAddonProps extends BaseComponentProps {
    divider?: boolean;
    position: "start" | "end";
    intent?: TextFieldProps["intent"];
    disabled?: TextFieldProps["disabled"];
    size?: TextFieldProps["size"];
}
export function TextFieldAddon(props: TextFieldAddonProps): JSX.Element;
export function TextField(props: TextFieldProps): JSX.Element;
type TransferPartial = {
    percentage: number;
    label: string;
};
export interface AssetWithdrawTokensProps extends BaseComponentProps {
    isDropdown?: boolean;
    fromSymbol: AvailableItem["symbol"];
    fromName: AvailableItem["name"];
    fromAddress: string;
    fromImgSrc: AvailableItem["imgSrc"];
    toName: AvailableItem["name"];
    toAddress: string;
    toImgSrc: AvailableItem["imgSrc"];
    available: AvailableItem["available"];
    priceDisplayAmount: AvailableItem["priceDisplayAmount"];
    amount?: string;
    transferLabel?: string;
    cancelLabel?: string;
    timeEstimateLabel: string;
    isSubmitDisabled?: boolean;
    partials?: Array<TransferPartial>;
    onChange?: (value: string) => void;
    onTransfer?: (event?: any) => void;
    onCancel?: (event?: any) => void;
    onAddressChange?: (value: string) => void;
    onAddressConfirm?: (event?: any) => void;
}
export function AssetWithdrawTokens(props: AssetWithdrawTokensProps): JSX.Element;
export interface NftMintProps extends BaseComponentProps {
    title: string;
    tag: string;
    name: string;
    description: string;
    quantity: number | string;
    royalties: number | string;
    minted: number | string;
    available: number | string;
    priceDisplayAmount: number | string;
    limited: number | string;
    imgSrc: string;
    tokenName?: string;
    pricePerToken: number | string;
    amount?: number;
    defaultAmount?: number;
    tokenAmount?: number;
    notionalAmount?: number;
    onChange?: (value: number) => void;
    onInput?: (event?: any) => void;
    isMintButtonDisabled?: boolean;
    isMintLoading?: boolean;
    mintButtonLabel?: string;
    mintButtonDisabledLabel?: string;
    onMint: (event?: any) => void;
}
export function NftMint(props: NftMintProps): JSX.Element;
export interface StarTextProps extends BaseComponentProps {
    size?: "md" | "lg";
    label?: string;
    value: string | number;
    tokenName?: string;
    showTokenIcon?: boolean;
    iconSrc?: string;
    onClick?: (event?: any) => void;
    attributes?: Sprinkles;
}
export function StarText(props: StarTextProps): JSX.Element;
type ProfileCardPriceItem = {
    label: string;
    value: string | number;
    iconSrc?: string;
    tokenName?: string;
    onClick?: (event?: any) => void;
};
export interface NftProfileCardProps extends BaseComponentProps {
    thumbnailBehavior?: "full" | "contain";
    width?: Sprinkles["width"];
    imgSrc: string;
    name: string;
    priceItems: [ProfileCardPriceItem, ProfileCardPriceItem];
    onClick?: (event?: any) => void;
    attributes?: any;
}
export function NftProfileCard(props: NftProfileCardProps): JSX.Element;
interface NftProfileCardListProps extends BaseComponentProps {
    thumbnailBehavior?: NftProfileCardProps["thumbnailBehavior"];
    list: NftProfileCardProps[];
    attributes?: any;
}
export function NftProfileCardList(props: NftProfileCardListProps): JSX.Element;
type NftMeta = {
    label: string;
    value: string;
};
export interface NftProfileProps extends BaseComponentProps {
    title: string;
    headerButtonLabel: string;
    meta: Array<NftMeta>;
    name: string;
    isVerified: boolean;
    list: NftProfileCardProps[];
    thumbnailBehavior?: NftProfileCardProps["thumbnailBehavior"];
    onView: (event?: any) => void;
    attributes?: any;
}
export function NftProfile(props: NftProfileProps): JSX.Element;
export interface NftTraitListItemProps {
    name: string;
    value: string;
    rarityPercent: number;
}
export function NftTraitListItem(props: NftTraitListItemProps): JSX.Element;
export interface NftTraitListProps extends BaseComponentProps {
    list: NftTraitListItemProps[];
    attributes?: any;
}
export function NftTraitList(props: NftTraitListProps): JSX.Element;
interface NftDetailInfoProps {
    price?: number;
    lastSale?: number;
    owner?: string;
    topOffer?: number;
    floorPrice?: number;
    isNameVerified: boolean;
}
export function NftDetailInfo(props: NftDetailInfoProps): JSX.Element;
export interface NftDetailTopOfferProps {
    price: number;
    floorPrice: string;
    expires: string;
    from: string;
}
export function NftDetailTopOffers(props: NftDetailTopOfferProps): JSX.Element;
export interface NftDetailActivityListItemProps extends BaseComponentProps {
    event: string;
    price: number;
    from?: string;
    to?: string;
    date: string;
    tokenName: string;
    fromLabel?: string;
    toLabel?: string;
}
export function NftDetailActivityListItem(props: NftDetailActivityListItemProps): JSX.Element;
export interface NftDetailActivityListProps extends BaseComponentProps {
    title?: string;
    list: NftDetailActivityListItemProps[];
}
export function NftDetailActivityList(props: NftDetailActivityListProps): JSX.Element;
type TokenInfo = {
    tokenName?: string;
    iconSrc?: string;
};
interface BaseNftDetailProps extends BaseComponentProps {
    collectionName: string;
    name: string;
    creatorName: string;
    collectionDesc: string;
    mintPrice?: string;
    rarityOrder: number;
    tokensCount: number;
    ownerName: string;
    imgSrc: string;
    price?: number;
    tokenInfo?: TokenInfo;
    traits?: NftTraitListItemProps[];
    detailInfo?: NftDetailInfoProps;
    detailTopOffer?: NftDetailTopOfferProps;
    detailActivity?: NftDetailActivityListProps;
    onDownload: (event?: any) => void;
    onShare: (event?: any) => void;
    attributes?: any;
    children?: BaseComponentProps["children"];
}
type _ListForSale1 = {
    type: "listForSale";
    onTransfer: (event?: any) => void;
    onBurn: (event?: any) => void;
    onListForSale: (event?: any) => void;
};
type MakeOffer = {
    type: "makeOffer";
    onMakeOffer: (event?: any) => void;
};
type BuyNow = {
    type: "buyNow";
    onBuyNow: (event?: any) => void;
    onMakeOffer: (event?: any) => void;
};
type Custom = {
    type: "custom";
};
type NftDetailVariant = _ListForSale1 | MakeOffer | BuyNow | Custom;
export type NftDetailProps = NftDetailVariant & BaseNftDetailProps;
export function NftDetail(props: NftDetailProps): JSX.Element;
export interface TooltipProps extends BaseComponentProps {
    title: BaseComponentProps["children"];
    placement?: Placement;
    offset?: number;
    surroundPadding?: number;
    children: BaseComponentProps["children"];
}
export function Tooltip(props: TooltipProps): JSX.Element;
export type TabProps = {
    label: string;
    content: BaseComponentProps["children"];
};
export interface TabsProps extends BaseComponentProps {
    defaultActiveTab?: number;
    activeTab?: number;
    isLazy?: boolean;
    onActiveTabChange?: (tabId: number) => void;
    tabs: TabProps[];
    attributes?: BoxProps;
}
export function Tabs(props: TabsProps): JSX.Element;
export type NftFeeItemProps = {
    feeName: string;
    amount: number | string | undefined;
    desc: string;
    show?: boolean;
    amountKey?: string;
};
export interface NftFeesProps extends BaseComponentProps {
    title: string;
    listFee?: number | string;
    royalities?: number | string;
    fairBurn?: number | string;
    proceeds?: number | string;
    symbol: string;
}
export function NftFees(props: NftFeesProps): JSX.Element;
export interface NftSellNowProps {
    bestOffer: number;
    offerToFloorPriceRatio: string;
    floorPrice: number;
    fees?: NftFeesProps;
    onList?: (event?: any) => void;
    onCancel?: (event?: any) => void;
}
export function NftSellNow(props: NftSellNowProps): JSX.Element;
export function ListForSale(props: any): JSX.Element;
export interface SwapPriceProps extends BaseComponentProps {
    title?: string;
    priceImpactLabel?: string;
    swapFeeLabel?: string;
    expectedOutputLabel?: string;
    minimumReceivedLabel?: string;
    routeLabel?: string;
    hasRoute?: boolean;
    priceImpact: string;
    swapFee: {
        percentage: string;
        value: string;
    };
    minimumReceived?: number;
    fromItem: AvailableItem;
    toItem: AvailableItem;
    disabled?: boolean;
    fromAmount: number;
    toAmount: number;
    attributes?: BoxProps;
}
export function SwapPrice(props: SwapPriceProps): JSX.Element;
export interface SwapItemProps extends TransferItemProps {
}
export type SwapInfo = {
    fromItem: AvailableItem;
    toItem: AvailableItem;
    fromAmount: number;
    toAmount: number;
};
type SwapItem = {
    label?: string;
    options: Array<AvailableItem>;
    selected: AvailableItem;
    amount: number;
    onItemSelected: (selectedItem: AvailableItem) => void;
    onAmountChange?: (selectedItem: AvailableItem, amount: number) => void;
    onAmountInput?: (selectedItem: AvailableItem, rawValue: string) => void;
};
type _ComboboxOption1 = {
    iconUrl?: ChainListItemProps["iconUrl"];
    name: ChainListItemProps["name"];
    tokenName: ChainListItemProps["tokenName"];
    amount?: ChainListItemProps["amount"];
    notionalValue?: ChainListItemProps["notionalValue"];
};
export interface SwapTokenProps extends BaseComponentProps {
    swapPrice: {
        hasRoute: SwapPriceProps["hasRoute"];
        priceImpact: SwapPriceProps["priceImpact"];
        swapFee: SwapPriceProps["swapFee"];
        routeDisabled?: boolean;
        minimumReceived?: number;
    };
    from: SwapItem;
    to: SwapItem;
    toleranceLimits?: Array<number>;
    filterFn?: (options: Array<_ComboboxOption1>, query: string) => Array<_ComboboxOption1>;
    onToggleDirection: () => void;
    onSwap: (event?: any) => void;
    onToleranceChange: (toterancePercent: number) => void;
    swapDisabled?: boolean;
    swapLabel?: string;
    swapDisabledLabel?: string;
    slippageLabel?: string;
}
export function SwapToken(props: SwapTokenProps): JSX.Element;
export interface BasicModalProps extends BaseComponentProps {
    isOpen: boolean;
    closeOnClickaway?: boolean;
    modalRoot?: HTMLElement | null;
    onOpen?: (event?: any) => void;
    onClose?: (event?: any) => void;
    renderCloseButton?: (props: any) => BaseComponentProps["children"];
    renderTrigger?: (props: any) => BaseComponentProps["children"];
    title: BaseComponentProps["children"];
    children?: BaseComponentProps["children"];
    className?: string;
    modalContainerClassName?: string;
    modalContentClassName?: string;
    modalChildrenClassName?: string;
}
export function BasicModal(props: BasicModalProps): JSX.Element;
export interface NftMakeOfferProps extends BaseComponentProps {
    imgSrc: string;
    tokenName: string;
    onChange?: (value: number) => void;
    onMakeOffer?: (event?: any) => void;
    onCancel?: (event?: any) => void;
    value?: number;
    attributes?: any;
    makeOfferLabel?: string;
    cancelLabel?: string;
    symbol?: string;
}
export function NftMakeOffer(props: NftMakeOfferProps): JSX.Element;
export interface SelectButtonProps extends BaseComponentProps {
    placeholder?: string;
    disabled?: boolean;
    intent?: TextFieldProps["intent"];
    onClick?: (event?: any) => void;
    size?: "sm" | "md";
    attributes?: any;
    buttonAttributes?: any;
    buttonRef?: any;
    valueProps?: any;
    _css?: Sprinkles;
}
export const SelectButton: React.ForwardRefExoticComponent<SelectButtonProps & React.RefAttributes<any>>;
export interface ConnectedWalletProps {
    avatar: string;
    name: string;
    btnText?: string;
    onClick: () => void;
    address: ClipboardCopyTextProps["text"];
    truncate: ClipboardCopyTextProps["truncate"];
    midTruncateLimit: ClipboardCopyTextProps["midTruncateLimit"];
    onCopied?: ClipboardCopyTextProps["onCopied"];
}
export function ConnectedWallet(props: ConnectedWalletProps): JSX.Element;
interface StakingAssetHeaderProps extends BoxProps {
    imgSrc: string;
    symbol: string;
    totalAmount: number;
    totalPrice: number;
    available: number;
    availablePrice: number;
    totalLabel?: string;
    availableLabel?: string;
    priceformatOptions?: NumberFormatOptions;
}
export function StakingAssetHeader(props: StakingAssetHeaderProps): JSX.Element;
interface StakingClaimHeaderProps extends BoxProps {
    stakedAmount: number;
    rewardsAmount: number;
    symbol: string;
    stakedLabel?: string;
    claimRewardsLabel?: string;
    claimLabel?: string;
    isLoading?: boolean;
    isDisabled?: boolean;
    onClaim?: (event?: any) => void;
}
export function StakingClaimHeader(props: StakingClaimHeaderProps): JSX.Element;
interface ValidatorListProps extends BaseComponentProps {
    variant?: "solid" | "ghost";
    gridLayout?: "auto" | "fixed";
    columns?: GridColumn[];
    data: Array<unknown>;
    tableProps?: BoxProps;
}
interface ValidatorNameCellProps extends BoxProps {
    size?: "sm" | "md";
    validatorId?: string;
    validatorName: string;
    validatorImg: string;
}
interface ValidatorTokenAmountCellProps extends BoxProps {
    amount: number | string;
    symbol?: string;
    formatOptions?: Partial<NumberFormatOptions>;
}
export function ValidatorList(props: ValidatorListProps): JSX.Element;
export function ValidatorNameCell(props: ValidatorNameCellProps): JSX.Element;
export function ValidatorTokenAmountCell(props: ValidatorTokenAmountCellProps): JSX.Element;
export type DividerProps = {
    orientation?: "horizontal" | "vertical";
} & Partial<Sprinkles>;
export function Divider(props: DividerProps): JSX.Element;
interface LiquidStakingReward extends AvailableItem {
    rewardAmount: number;
}
type BottomLink = {
    href: string;
    label: string;
};
type RewardDescriptionItem = {
    title: string;
    subtitle: string;
    desc: string;
};
export interface LiquidStakingProps extends BaseComponentProps {
    stakeToken?: AvailableItem | null;
    stakeAmount: number;
    reward: LiquidStakingReward;
    bottomLink?: BottomLink;
    decimals?: number;
    descriptionList?: Array<RewardDescriptionItem>;
    isSubmitDisabled?: boolean;
    onChange?: (stakeAmount: number) => void;
    onBlur?: (stakeAmount: number) => void;
    onFocus?: () => void;
    onSubmit: (event?: any) => void;
    submitButtonLabel?: string;
    submitButtonProps?: ButtonProps;
    halfButtonLabel?: string;
    maxButtonLabel?: string;
    onHalf?: () => void;
    onMax?: () => void;
    timeEstimateLabel: string;
    rewardLabel?: string;
    stakeLabel?: string;
    availableLabel?: string;
    accordionLabel?: BaseComponentProps["children"];
    footerLabel?: BaseComponentProps["children"];
    renderSubmitButton?: (props?: any) => BaseComponentProps["children"];
    renderAccordionButton?: (props?: any) => BaseComponentProps["children"];
    precision?: number;
    attributes?: Sprinkles;
    domAttributes?: any;
}
export function LiquidStaking(props: LiquidStakingProps): JSX.Element;
export interface ScrollIndicatorProps {
    direction: "left" | "right";
    onClick: (event?: any) => void;
    showShadow?: boolean;
}
export function ScrollIndicator(props: ScrollIndicatorProps): JSX.Element;
export interface CarouselProps {
    children: any;
    width?: string;
    gap?: string;
    verticalAlign?: "start" | "center" | "end";
    scrollOffset?: number;
    showIndicators: boolean;
    showIndicatorsShadow?: boolean;
    indicatorsXOffset?: number;
    indicatorsYOffset?: number;
    initialPosition?: number;
    showFadeOut?: boolean;
    fadeOutWidth?: number;
}
export function Carousel(props: CarouselProps): JSX.Element;
export interface AccordionProps {
    renderTrigger: React.ReactNode | ((props: {
        isExpanded: boolean;
    }) => React.ReactNode);
    renderContent: React.ReactNode;
    width?: BoxProps["width"];
    onToggle?: () => void;
    isExpanded?: boolean;
    transition?: string;
}
export function Accordion(props: AccordionProps): JSX.Element;
export interface BreadcrumbProps {
    children: BaseComponentProps["children"];
    mt?: Sprinkles["mt"];
    mb?: Sprinkles["mb"];
    width?: Sprinkles["width"];
    gapLeft?: Sprinkles["gap"];
    gapRight?: Sprinkles["gap"];
    primaryColor?: Sprinkles["color"];
    secondaryColor?: Sprinkles["color"];
}
export interface BreadcrumbLink {
    name: string;
    href?: string;
    download?: string | boolean;
    linkRef?: string;
    target?: "_self" | "_blank" | "_parent" | "_top";
    type?: string;
    onClick?: () => void;
}
type BreadcrumbItemProps = Pick<BreadcrumbProps, "gapLeft" | "primaryColor" | "secondaryColor"> & BreadcrumbLink & {
    as?: string;
    isLast: boolean;
    separator?: string;
};
export function Breadcrumb(props: BreadcrumbProps): JSX.Element;
export function BreadcrumbItem(props: BreadcrumbItemProps): JSX.Element;
export interface NftMinimumOfferProps extends BaseComponentProps {
    floorPrice: number;
    highestOffer: number;
    onList?: (event?: any) => void;
    onCancel?: (event?: any) => void;
    onChange?: (value: number) => void;
    value?: number;
    fees: NftFeesProps;
}
export function NftMinimumOffer(props: NftMinimumOfferProps): JSX.Element;
export interface NftTransferProps extends BaseComponentProps {
    onChange?: (event?: any) => void;
    onTransfer?: (event?: any) => void;
    onCancel?: (event?: any) => void;
    id?: string;
    disabled?: boolean;
    label?: string;
    placeholder?: string;
    transferLabel?: string;
    cancelLabel?: string;
}
export function NftTransfer(props: NftTransferProps): JSX.Element;
export interface ChangeChainListItemProps extends ListItemProps {
    iconUrl?: string;
    label: string;
}
export function ChangeChainListItem(props: ChangeChainListItemProps): JSX.Element;
export interface ChangeChainInputProps extends Omit<TextFieldProps, "id" | "inputContainer" | "inputClassName" | "startAddon" | "endAddon" | "clearLabel" | "onChange"> {
    size?: TextFieldProps["size"];
    attributes?: any;
    sprinkles?: Sprinkles;
    containerRef?: any;
    inputAttributes?: any;
    id?: string;
    iconUrl?: string;
    chainName?: string;
    isLoading?: boolean;
    isClearable?: boolean;
    showSelectedItem?: boolean;
    onChange?: (e: any) => void;
    onClear?: (event?: any) => void;
    onDropdownArrowClicked?: (event?: any) => void;
}
export function ChangeChainInput(props: ChangeChainInputProps): JSX.Element;
type DelegationItem = {
    label: string;
    tokenAmount: string;
    tokenName: string;
    isLoading?: boolean;
};
type InputPartialChange = {
    label: string;
    isLoading?: boolean;
    onClick: () => void;
};
interface StakingDelegateProps extends BaseComponentProps {
    header?: {
        title?: string;
        subtitle?: string;
        avatarUrl?: string;
    };
    headerExtra?: BaseComponentProps["children"];
    delegationItems?: DelegationItem[];
    footer?: BaseComponentProps["children"];
    inputProps?: StakingDelegateInputProps;
    attributes?: Omit<BoxProps, "attributes" | "as" | "className" | "children" | "style" | "ref">;
}
interface StakingDelegateCardProps extends BaseComponentProps, DelegationItem {
    attributes?: Omit<BoxProps, "attributes" | "as" | "className" | "children" | "style" | "ref">;
}
interface StakingDelegateInputProps extends BaseComponentProps {
    value?: number;
    notionalValue?: number;
    inputToken?: {
        tokenName: string;
        tokenIconUrl: string;
    };
    maxValue?: number;
    minValue?: number;
    partials?: InputPartialChange[];
    isLoadingNotionalValue?: boolean;
    onValueChange?: (value: number) => void;
    onValueInput?: (rawValue: string) => void;
    formatOptions?: NumberFormatOptions;
    attributes?: Omit<BoxProps, "attributes" | "as" | "className" | "children" | "style" | "ref">;
}
export function StakingDelegateInput(props: StakingDelegateInputProps): JSX.Element;
export function StakingDelegateCard(props: StakingDelegateCardProps): JSX.Element;
export function StakingDelegate(props: StakingDelegateProps): JSX.Element;
interface TableProps extends BoxProps {
    gridLayout?: "auto" | "fixed";
}
interface TableHeadProps extends BoxProps {
}
interface TableRowHeaderCellProps extends BoxProps {
}
interface TableBodyProps extends BoxProps {
}
interface TableRowProps extends BoxProps {
}
interface TableCellProps extends BoxProps {
}
interface TableColumnHeaderCellProps extends BoxProps {
}
export function Table(props: TableProps): JSX.Element;
export function TableHead(props: TableHeadProps): JSX.Element;
export function TableBody(props: TableBodyProps): JSX.Element;
export function TableRow(props: TableRowProps): JSX.Element;
export function TableCell(props: TableCellProps): JSX.Element;
export function TableRowHeaderCell(props: TableRowHeaderCellProps): JSX.Element;
export function TableColumnHeaderCell(props: TableColumnHeaderCellProps): JSX.Element;
type TimelineEvent = {
    timestamp: string;
    title?: string;
    description?: string;
    className?: string;
    customContent?: BaseComponentProps["children"];
    secondaryContent?: BaseComponentProps["children"];
    eventTimestampProps?: TextProps;
    eventTitleProps?: TextProps;
    eventDescriptionProps?: TextProps;
};
interface TimelineProps extends BaseComponentProps {
    events: TimelineEvent[];
    attributes?: BoxProps;
}
export function Timeline(props: TimelineProps): JSX.Element;
type GovernanceProposalStatus = "pending" | "passed" | "rejected";
type GovernanceVoteType = "yes" | "abstain" | "no" | "noWithVeto";
type GovernanceVoteStructure = Record<GovernanceVoteType, number>;
type GovernanceVoteFormStatus = "pending" | "voted" | "expired";
type LegendFormatter = (voteType: GovernanceVoteType, votes: number, totalVotes: number) => string;
type _GovernanceProposalItem1 = {
    status: GovernanceProposalStatus;
    statusLabel?: string;
    title: string | BaseComponentProps["children"];
    id?: string;
    endTimeLabel?: string;
    endTime: string;
    votes: GovernanceVoteStructure;
    voteTypeLabels?: Record<GovernanceVoteType, string>;
    formatLegend?: LegendFormatter;
};
interface GovernanceProposalItemProps extends BaseComponentProps, _GovernanceProposalItem1 {
    attributes?: Sprinkles;
}
interface GovernanceVoteFormProps extends BaseComponentProps {
    status: GovernanceVoteFormStatus;
    defaultVote?: GovernanceVoteType;
    timepoints: Array<{
        label: string;
        timestamp: string;
    }>;
    radioLabels: Record<GovernanceVoteType, string>;
    isDisabled?: boolean;
    confirmButtonLabels: {
        pending: string;
        needsConfirm: string;
        expired: string;
        voted: string;
    };
    onConfirmVote: (vote: GovernanceVoteType) => void;
    attributes?: Sprinkles;
}
interface GovernanceVoteBreakdownProps extends BaseComponentProps {
    voteType: GovernanceVoteType;
    title?: string;
    description?: string;
    votePercentage: number;
    attributes?: Sprinkles;
}
interface GovernanceResultCardProps extends BaseComponentProps {
    resultType: "passed" | "rejected" | "info";
    label: string;
    votePercentage: number;
    attributes?: Sprinkles;
}
interface GovernanceCheckboxProps extends AriaCheckboxProps {
    isRejected?: boolean;
    children?: React.ReactNode;
}
export function GovernanceCheckbox(props: GovernanceCheckboxProps): JSX.Element;
export function GovernanceProposalItem(props: GovernanceProposalItemProps): JSX.Element;
export function GovernanceVoteBreakdown(props: GovernanceVoteBreakdownProps): JSX.Element;
interface GovernanceRadioProps extends AriaRadioProps {
    children?: React.ReactNode;
}
export function GovernanceRadio(props: GovernanceRadioProps): JSX.Element;
interface GovernanceRadioGroupProps extends AriaRadioGroupProps {
    children?: React.ReactNode;
}
export function GovernanceRadioGroup(props: GovernanceRadioGroupProps): JSX.Element;
export function GovernanceVoteForm(props: GovernanceVoteFormProps): JSX.Element;
export function GovernanceResultCard(props: GovernanceResultCardProps): JSX.Element;
interface MeshProviderProps extends BaseComponentProps {
    themeMode?: ThemeProviderProps["themeMode"];
}
type _BaseButtonProps1 = Omit<ButtonProps, "variant" | "intent" | "size" | "iconSize" | "leftIcon" | "rightIcon" | "isLoading" | "spinnerPlacement">;
interface MeshButtonProps extends _BaseButtonProps1 {
    color?: BoxProps["color"];
    width?: BoxProps["width"];
    height?: BoxProps["height"];
    px?: BoxProps["px"];
    py?: BoxProps["py"];
    borderRadius?: BoxProps["borderRadius"];
    borderTopLeftRadius?: BoxProps["borderTopLeftRadius"];
    borderTopRightRadius?: BoxProps["borderTopRightRadius"];
    borderBottomRightRadius?: BoxProps["borderBottomRightRadius"];
    borderBottomLeftRadius?: BoxProps["borderBottomLeftRadius"];
    variant?: "text" | "solid";
    colorScheme?: "primary" | "secondary";
}
interface MeshTagButtonProps extends _BaseButtonProps1 {
}
interface MeshTabProps extends _BaseButtonProps1 {
    isActive?: boolean;
    onClick?: (event?: any) => void;
}
interface MeshStakingSliderInfoProps extends BaseComponentProps {
    tokenName: string;
    tokenSymbol: string;
    tokenImgSrc: string;
    tokenAPR: string;
    isActive?: boolean;
    attributes?: BoxProps;
}
interface MeshFooterInfoItemProps extends BaseComponentProps {
    title: string;
    description: string;
    subDescription?: string;
    subDescriptionProps?: TextProps;
    attributes?: BoxProps;
}
interface MeshValidatorSquadEmptyProps extends BaseComponentProps {
    thumbnailSrcs: string[];
    count: number;
    onDecrease?: () => void;
    onIncrease?: () => void;
    onRandomize?: () => void;
    attributes?: BoxProps;
}
interface MeshTableProps extends BaseComponentProps {
    columns?: GridColumn[];
    data: Array<{
        id: string;
    } & object>;
    pinnedIds?: string[];
    maxPinnedRows?: number;
    borderless?: boolean;
    rowHeight?: BoxProps["height"];
    containerProps?: BoxProps;
    tableProps?: BoxProps;
}
interface MeshTableHeaderActionProps extends BaseComponentProps {
    type?: "stake" | "unstake";
    stakeLabel?: string;
    unstakeLabel?: string;
    tokenName: string;
    tokenImgSrc: string;
    tokenAmount: string;
    onClick?: () => void;
    attributes?: BoxProps;
}
interface MeshTableChainCellProps extends BaseComponentProps {
    size?: "xs" | "sm" | "md";
    name: string;
    imgSrc: string;
    attributes?: BoxProps;
}
interface MeshTableAPRCellProps extends BaseComponentProps {
    value: string;
    attributes?: BoxProps;
}
interface MeshTableValidatorsCellProps extends BaseComponentProps {
    validators: Array<{
        name: string;
        imgSrc: string;
    }>;
    attributes?: BoxProps;
}
export function MeshProvider(props: MeshProviderProps): JSX.Element;
export function MeshStakingSliderInfo(props: MeshStakingSliderInfoProps): JSX.Element;
export function MeshButton(props: MeshButtonProps): JSX.Element;
export function MeshTagButton(props: MeshTagButtonProps): JSX.Element;
export function MeshTab(props: MeshTabProps): JSX.Element;
export function MeshFooterInfoItem(props: MeshFooterInfoItemProps): JSX.Element;
export function MeshValidatorSquadEmpty(props: MeshValidatorSquadEmptyProps): JSX.Element;
interface MeshModalProps extends BasicModalProps {
    themeMode?: ThemeProviderProps["themeMode"];
}
export function MeshModal(props: MeshModalProps): JSX.Element;
export function MeshTable(props: MeshTableProps): JSX.Element;
export function MeshTableChainCell(props: MeshTableChainCellProps): JSX.Element;
export function MeshTableAPRCell(props: MeshTableAPRCellProps): JSX.Element;
export function MeshTableHeaderAction(props: MeshTableHeaderActionProps): JSX.Element;
export function MeshTableValidatorsCell(props: MeshTableValidatorsCellProps): JSX.Element;
interface NobleProviderProps extends BaseComponentProps {
    themeMode?: ThemeProviderProps["themeMode"];
}
interface NobleTxDirectionCardProps extends BaseComponentProps {
    direction: string;
    chainName: string;
    address: string;
    logoUrl: string;
    addressDisplayLength?: number;
}
interface NobleTxProgressBarProps extends BaseComponentProps {
    progress: number;
    width?: BoxProps["width"];
    mx?: BoxProps["mx"];
    mt?: BoxProps["mt"];
    mb?: BoxProps["mb"];
}
interface NobleTxStepItemProps extends BaseComponentProps {
    step: string;
    status: "completed" | "processing" | "pending";
}
type _BaseButtonProps2 = Omit<ButtonProps, "variant" | "intent" | "size" | "isLoading" | "spinnerPlacement">;
type NobleButtonVariant = "text" | "solid" | "outlined" | "tag";
type NobleButtonSize = "xs" | "sm" | "md" | "lg" | "xl";
interface NobleButtonProps extends _BaseButtonProps2 {
    color?: BoxProps["color"];
    width?: BoxProps["width"];
    height?: BoxProps["height"];
    variant?: NobleButtonVariant;
    size?: NobleButtonSize;
    fontSize?: BoxProps["fontSize"];
    fontWeight?: BoxProps["fontWeight"];
    lineHeight?: BoxProps["lineHeight"];
    isActive?: boolean;
    borderless?: boolean;
}
interface NobleTokenAvatarProps {
    mainLogoUrl: string;
    mainLogoAlt?: string;
    subLogoUrl: string;
    subLogoAlt?: string;
    isRound?: boolean;
    isLoadingSubLogo?: boolean;
}
type DisplayToken = {
    symbol: string;
    network: string;
    tokenAmount: string;
    notionalValue: string;
} & NobleTokenAvatarProps;
interface NobleSelectTokenButtonProps extends _BaseButtonProps2 {
    width?: BoxProps["width"];
    height?: BoxProps["height"];
    size?: NobleButtonSize;
    borderless?: boolean;
    isActive?: boolean;
    token: DisplayToken;
}
interface NobleSelectNetworkButtonProps extends _BaseButtonProps2 {
    width?: BoxProps["width"];
    height?: BoxProps["height"];
    size?: NobleButtonSize;
    logoUrl: string;
    title: string;
    subTitle: string;
    actionLabel: string;
}
interface NobleSelectWalletButtonProps extends _BaseButtonProps2 {
    logoUrl: string;
    logoAlt?: string;
    title: string;
    subTitle: string;
}
type NobleTxStatus = "processing" | "successful";
interface NobleTxHistoryOverviewItemProps {
    amount: string;
    status: NobleTxStatus;
    sourceChainLogoSrc: string;
    destinationChainLogoSrc: string;
    mainLogoSrc?: string;
    amountUnit?: string;
    isExpanded?: boolean;
    disabled?: boolean;
    customStatus?: {
        text: string;
        color: BoxProps["color"];
    };
}
interface NoblePageTitleBarProps {
    title: string;
    showBackButton?: boolean;
    onBackButtonClick?: (event: any) => void;
    mt?: BoxProps["mt"];
    mb?: BoxProps["mb"];
    mx?: BoxProps["mx"];
}
interface NobleInputProps extends Omit<TextFieldProps, "clearLabel" | "intent"> {
    labelContainerProps?: BoxProps;
    labelExtra?: BaseComponentProps["children"];
    helperText?: BaseComponentProps["children"];
    size?: "sm" | "md";
    intent?: "success" | "error";
    inputTextAlign?: BoxProps["textAlign"];
    inputContainerProps?: BoxProps;
}
interface NobleTxChainRouteProps {
    srcChainLogoUrl: string;
    srcChainLogoAlt?: string;
    destChainLogoUrl: string;
    destChainLogoAlt?: string;
    containerProps?: BoxProps;
}
interface NobleTxEstimateProps extends Omit<NobleTxChainRouteProps, "containerProps"> {
    timeEstimateLabel: string;
    feeEstimateLabel: string;
    containerProps?: BoxProps;
}
export function NobleProvider(props: NobleProviderProps): JSX.Element;
export function NobleTxDirectionCard(props: NobleTxDirectionCardProps): JSX.Element;
export function NobleTxProgressBar(props: NobleTxProgressBarProps): JSX.Element;
export function NobleTxStepItem(props: NobleTxStepItemProps): JSX.Element;
export function NobleButton(props: NobleButtonProps): JSX.Element;
export function NobleInput(props: NobleInputProps): JSX.Element;
export function NobleSelectNetworkButton(props: NobleSelectNetworkButtonProps): JSX.Element;
export function NobleTokenAvatar(props: NobleTokenAvatarProps): JSX.Element;
export function NobleSelectTokenButton(props: NobleSelectTokenButtonProps): JSX.Element;
export function NobleSelectWalletButton(props: NobleSelectWalletButtonProps): JSX.Element;
export function NobleTxChainRoute(props: NobleTxChainRouteProps): JSX.Element;
export function NobleTxEstimate(props: NobleTxEstimateProps): JSX.Element;
export function NoblePageTitleBar(props: NoblePageTitleBarProps): JSX.Element;
export function NobleTxHistoryOverviewItem(props: NobleTxHistoryOverviewItemProps): JSX.Element;
type Item = {
    key: string;
    label: string;
    index: number;
};
interface SelectProps {
    id?: string | undefined;
    fullWidth?: boolean;
    width?: number | string;
    optionsWidth?: number | string;
    size?: "sm" | "md" | "lg";
    label?: React.ReactNode;
    placeholder?: string;
    defaultSelectedItem?: Item;
    selectedIndex?: number;
    onSelectItem?: (item: Item | null) => void;
    children?: React.ReactNode;
    className?: string;
}
export function Select(props: SelectProps): JSX.Element;
interface ComboboxProps<T> extends ComboBoxProps<T> {
    defaultIsOpen?: boolean;
    openOnFocus?: boolean;
    size?: "sm" | "md";
    styleProps?: BoxProps;
    inputAddonStart?: React.ReactNode;
    inputAddonEnd?: React.ReactNode;
}
export declare function Combobox<T extends object>(props: ComboboxProps<T>): JSX.Element;
declare declare namespace Combobox {
    var Item: <T>(props: $$parcel$import$171<T>) => React.JSX.Element;
    var Section: <T>(props: $$parcel$import$172<T>) => React.JSX.Element;
}
interface SliderProps extends AriaSliderProps {
    name: string;
    fluidWidth?: boolean;
    width?: BoxProps["width"];
    previewPercent?: number;
    thumbTrackColor?: BoxProps["color"];
    previewTrackColor?: BoxProps["color"];
    renderLabel?: ({ labelProps, outputProps, valuePercent, valueLabel, }: {
        labelProps: React.LabelHTMLAttributes<HTMLLabelElement>;
        outputProps: React.OutputHTMLAttributes<HTMLOutputElement>;
        valuePercent: number;
        valueLabel: string;
    }) => React.ReactNode;
    formatOptions?: Parameters<typeof useNumberFormatter>[0];
}
export function Slider(props: SliderProps): JSX.Element;
interface SelectOptionProps {
    optionKey: string;
    label: string;
    isDisabled?: boolean;
    children?: React.ReactNode;
    className?: string;
}
export function SelectOption(props: SelectOptionProps): JSX.Element;
interface PopoverOptions {
    modal?: boolean;
    triggerType?: "hover" | "click";
    placement?: _Placement1;
    isOpen?: boolean;
    setIsOpen?: Dispatch<SetStateAction<boolean>>;
    initialOpen?: boolean;
    offset?: OffsetOptions;
}
type UseInteractionsValue = ReturnType<typeof useInteractions>;
type UseFloatingValue = ReturnType<typeof useFloating>;
type UsePopoverReturnValue = PopoverOptions & {
    arrowRef?: React.RefObject<SVGSVGElement>;
} & UseFloatingValue & UseInteractionsValue;
type PopoverProps = {
    children: React.ReactNode;
} & Partial<UsePopoverReturnValue>;
export const Popover: ({ children, ...popoverOptions }: PopoverProps) => JSX.Element;
interface PopoverTriggerProps {
    children: React.ReactNode;
}
export const PopoverTrigger: ({ children }: PopoverTriggerProps) => JSX.Element;
interface PopoverContentProps {
    children: React.ReactNode;
    showArrow?: boolean;
    arrowStyles?: Pick<FloatingArrowProps, "width" | "height" | "tipRadius" | "fill">;
    transitionStyles?: UseTransitionStylesProps;
}
export const PopoverContent: ({ children, showArrow, arrowStyles, transitionStyles, }: PopoverContentProps) => JSX.Element;
interface _ItemProps1 {
    isActive: boolean;
    size?: ChangeChainListItemProps["size"];
    iconUrl?: ChangeChainListItemProps["iconUrl"];
    label: string;
    value: string;
}
type _ComboboxOption2 = Omit<_ItemProps1, "isActive" | "size">;
export interface ChangeChainCombobox {
    id?: string;
    appearance?: "bold" | "minimal";
    isLoading?: boolean;
    isClearable?: boolean;
    label?: string;
    maxHeight?: number;
    size?: ChangeChainListItemProps["size"];
    options: Array<_ComboboxOption2>;
    filterFn?: (options: Array<_ComboboxOption2>) => Array<_ComboboxOption2>;
    defaultSelected?: _ComboboxOption2;
    onItemSelected?: (selected: _ComboboxOption2 | null) => void;
    defaultOpen?: boolean;
    valueItem?: _ComboboxOption2;
    containerProp?: BoxProps;
    rootNode?: HTMLElement;
    virtualization?: {
        itemSize: number;
        overscan: number;
    };
}
export function ChangeChainCombobox(props: ChangeChainCombobox): JSX.Element;
interface _ComboboxProps1<T> extends ComboBoxProps<T> {
    defaultIsOpen?: boolean;
    styleProps?: BoxProps;
}
export declare function NobleChainCombobox<T extends object>(props: _ComboboxProps1<T>): JSX.Element;
declare declare namespace NobleChainCombobox {
    var Item: <T>(props: $$parcel$import$202<T>) => React.JSX.Element;
    var Section: <T>(props: $$parcel$import$203<T>) => React.JSX.Element;
}
export function useColorModeValue<TValue extends string>(lightValue: TValue, darkValue: TValue): TValue;

//# sourceMappingURL=index.d.ts.map
