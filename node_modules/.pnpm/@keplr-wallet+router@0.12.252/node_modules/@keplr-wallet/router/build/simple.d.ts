import { Message } from "./message";
import { MessageRequester } from "./types";
declare const symbolRoute: unique symbol;
declare const symbolType: unique symbol;
export declare class SimpleMessage<R = any> extends Message<R> {
    protected [symbolRoute]: string;
    protected [symbolType]: string;
    [key: string]: any;
    constructor(route: string, type: string, data: Record<string, any>);
    route(): string;
    type(): string;
    validateBasic(): void;
    approveExternal(): boolean;
}
/**
 * Send message without typing and message instance.
 * Usage of this function is not recommended.
 * However, if you know about this function well,
 * and you want to avoid the usage of troublesome typing and class definition,
 * You can try using this function.
 * @param requester
 * @param port
 * @param route
 * @param type
 * @param data
 */
export declare function sendSimpleMessage<R = any>(requester: MessageRequester, port: string, route: string, type: string, data: Record<string, any>): Promise<R>;
export {};
