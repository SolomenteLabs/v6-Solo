var a=Object.defineProperty;var t=(e,s)=>a(e,"name",{value:s,configurable:!0});import{v4 as v}from"uuid";var m=class m extends Error{constructor(s){super(s),this.name="CosmiframeTimeoutError"}};t(m,"CosmiframeTimeoutError");var p=m;var A="UNSAFE_ALLOW_ANY_ORIGIN",I=t((e,s,r)=>new Promise((f,c)=>{let w=null,u=v(),n=t(({origin:o,source:d,data:i})=>{!y(s,o)||d!==window.parent||i.id!==u||(window.removeEventListener("message",n),w!==null&&clearTimeout(w),i.type==="success"?f({result:i.response,origin:o}):c(new Error(i.error)))},"listener");window.addEventListener("message",n);try{let o={...e,id:u};window.parent.postMessage(o,"*")}catch(o){window.removeEventListener("message",n),c(o)}r&&(w=setTimeout(()=>{window.removeEventListener("message",n),c(new p(`Timed out after ${r}ms waiting for parent to respond.`))},r))}),"callParentMethod"),N=t(e=>{if(!e||e.type==="error")return{type:"error",error:e&&e.type==="error"&&e.error||"Handled by outer wallet."};if(e.type==="success")return{type:"success",response:e.value}},"processOverrideHandler"),O=t(()=>typeof window<"u"&&window.self!==window.parent,"isInIframe"),y=t((e,s)=>e.some(r=>r==="*"||typeof r=="string"&&s===r||r instanceof RegExp&&r.test(s)),"isOriginAllowed");export{A as UNSAFE_ALLOW_ANY_ORIGIN,I as callParentMethod,O as isInIframe,y as isOriginAllowed,N as processOverrideHandler};
//# sourceMappingURL=utils.mjs.map