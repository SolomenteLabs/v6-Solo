"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeplrFallback = void 0;
const keplr_1 = require("./keplr");
class KeplrFallback extends keplr_1.Keplr {
    constructor(onKeplrNotDetected) {
        super();
        this.onKeplrNotDetected = onKeplrNotDetected;
        this.isKeplrDetected = null;
        if (this.onKeplrNotDetected) {
            keplr_1.Keplr.getKeplr(500).then((keplr) => {
                var _a;
                if (!keplr) {
                    (_a = this.onKeplrNotDetected) === null || _a === void 0 ? void 0 : _a.call(this);
                }
            });
        }
    }
    requestMethod(method, args) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.isKeplrDetected == null) {
                const keplr = yield keplr_1.Keplr.getKeplr(500);
                if (keplr) {
                    this.isKeplrDetected = true;
                }
                else {
                    this.isKeplrDetected = false;
                }
            }
            if (this.isKeplrDetected) {
                return keplr_1.Keplr.staticRequestMethod(method, args);
            }
            else {
                const fallback = window.keplr;
                if (fallback) {
                    return fallback[method](...args);
                }
                else {
                    throw new Error("Can't detect keplr fallback");
                }
            }
        });
    }
}
exports.KeplrFallback = KeplrFallback;
//# sourceMappingURL=keplr-fallback.js.map